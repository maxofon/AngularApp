{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.module.ts","./src/app/admin/create-page/create-page.component.ts","./src/app/admin/create-page/create-page.component.html","./src/app/admin/dashboard-page/dashboard-page.component.ts","./src/app/admin/dashboard-page/dashboard-page.component.html","./src/app/admin/edit-page/edit-page.component.ts","./src/app/admin/edit-page/edit-page.component.html","./src/app/admin/login-page/login-page.component.ts","./src/app/admin/login-page/login-page.component.html","./src/app/admin/shared/components/admin-layout/admin-layout.component.ts","./src/app/admin/shared/components/admin-layout/admin-layout.component.html","./src/app/admin/shared/search.pipe.ts","./src/app/admin/shared/services/auth.guard.ts","./src/app/admin/shared/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart-page/cart-page.component.ts","./src/app/cart-page/cart-page.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/product-page/product-page.component.ts","./src/app/product-page/product-page.component.html","./src/app/register-page/register-page.component.ts","./src/app/register-page/register-page.component.html","./src/app/shared/components/alert/alert.component.ts","./src/app/shared/components/alert/alert.component.html","./src/app/shared/components/main-layout/main-layout.component.ts","./src/app/shared/components/main-layout/main-layout.component.html","./src/app/shared/components/product/product.component.ts","./src/app/shared/components/product/product.component.html","./src/app/shared/my.validators.ts","./src/app/shared/services/alert.service.ts","./src/app/shared/services/cart.service.ts","./src/app/shared/services/products.service.ts","./src/app/shared/shared.module.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { CreatePageComponent } from './create-page/create-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {AuthGuard} from \"./shared/services/auth.guard\";\r\nimport {SearchPipe} from './shared/search.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLayoutComponent,\r\n    LoginPageComponent,\r\n    DashboardPageComponent,\r\n    CreatePageComponent,\r\n    EditPageComponent,\r\n    SearchPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'admin', component: AdminLayoutComponent, children: [\r\n          {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n          {path: 'login', component: LoginPageComponent},\r\n          {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n          {path: 'create', component: CreatePageComponent, canActivate: [AuthGuard]},\r\n          {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n        ]\r\n      }\r\n    ]),\r\n    FormsModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Product} from \"../../shared/interfaces/Product\";\r\nimport {ProductsService} from \"../../shared/services/products.service\";\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      company: new FormControl(null, Validators.required),\r\n      price: new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const product: Product = {\r\n      name: this.form.value.name,\r\n      company: this.form.value.company,\r\n      price: this.form.value.price\r\n    }\r\n\r\n    this.productsService.create(product).subscribe(() => {\r\n      this.form.reset()\r\n      this.alert.success('Создан новый пост')\r\n    })\r\n\r\n    console.log('new product', product);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <h1>Создание нового продукта</h1>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"name\">Название продукта:</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    <div\r\n      *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('name').errors.required\"\r\n      >Введите название продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('company').touched && form.get('company').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"company\">Название компании:</label>\r\n    <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    <div\r\n      *ngIf=\"form.get('company').touched && form.get('company').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('company').errors.required\"\r\n      >Введите название компании</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n          [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n          class=\"form-control\"\r\n  >\r\n    <label for=\"price\">Цена продукта:</label>\r\n    <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n    <div\r\n            *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n            class=\"validation\"\r\n    >\r\n      <small\r\n              *ngIf=\"form.get('price').errors.required\"\r\n      >Введите цену продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-block btn-dark\"\r\n    [disabled]=\"form.invalid\"\r\n    >Создать продукт</button>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.scss']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  products: Product[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  searchStr = '';\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.productsService.getAll().subscribe(products => {\r\n      this.products = products\r\n      // console.log('Products: ',this.products);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.productsService.remove(id).subscribe(() => {\r\n      this.products = this.products.filter(product => product.id !== id);\r\n      this.alert.danger('Продукт был удален');\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"products.length; else loading\">\r\n  <div class=\"form-control\">\r\n    <input type=\"text\" placeholder=\"Найти продукт по названию...\" [(ngModel)]=\"searchStr\">\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Название</th>\r\n      <th>Компания</th>\r\n      <th>Цена</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let product of products | searchProducts:searchStr ; let idx = index\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ product.name }}</td>\r\n      <td>{{ product.company }}</td>\r\n      <td>{{ product.price | currency:'USD' }}</td>\r\n      <td>\r\n        <button\r\n          class=\"btn btn-link open\"\r\n          [routerLink]=\"['/admin','product', product.id, 'edit']\"\r\n        >Открыть</button>\r\n\r\n        <a (click)=\"remove(product.id)\">Удалить</a>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-page',\r\n  templateUrl: './edit-page.component.html',\r\n  styleUrls: ['./edit-page.component.scss']\r\n})\r\nexport class EditPageComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  product: Product\r\n  submitted: boolean = false\r\n  uSub: Subscription\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(switchMap((params: Params) => {\r\n        return this.productsService.getById(params['id'])\r\n      }))\r\n      .subscribe((product: Product) => {\r\n        this.product = product\r\n        this.form = new FormGroup({\r\n          name: new FormControl(product.name, Validators.required),\r\n          company: new FormControl({value: product.company, disabled: true}, Validators.required),\r\n          price: new FormControl(product.price, Validators.required)\r\n        })\r\n      })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    this.uSub = this.productsService.update({\r\n      ...this.product,\r\n      name: this.form.value.name,\r\n      price: this.form.value.price\r\n    }).subscribe(() => {\r\n      this.submitted = false\r\n      this.alert.success('Продукт был обновлен')\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.uSub) {\r\n      this.uSub.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"form; else loading\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n      class=\"form-control\"\r\n    >\r\n      <label for=\"name\">Название продукта:</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n        class=\"validation\"\r\n      >\r\n        <small\r\n          *ngIf=\"form.get('name').errors.required\"\r\n        >Введите название продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-control\">\r\n      <label for=\"company\">Название компании:</label>\r\n      <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    </div>\r\n\r\n    <div\r\n            [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n            class=\"form-control\"\r\n    >\r\n      <label for=\"price\">Цена продукта:</label>\r\n      <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n      <div\r\n              *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n              class=\"validation\"\r\n      >\r\n        <small\r\n                *ngIf=\"form.get('price').errors.required\"\r\n        >Введите цену продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"form.invalid || submitted\"\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n    >Обновить</button>\r\n  </form>\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../../shared/interfaces/User';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup\r\n  submitted: boolean =  false;\r\n  message: string\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['loginAgain']) {\r\n        this.message = 'Пожалуйста, введите данные.';\r\n      } else if (params['authFailed']) {\r\n        this.message = 'Сессия истекла. Введите данные заново.';\r\n      }\r\n    })\r\n\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    // const user: User = {\r\n    //   email: this.form.value.email,\r\n    //   password: this.form.value.password\r\n    // }\r\n\r\n    // this.auth.login(user).subscribe(() => {\r\n    //   this.form.reset;\r\n    //   this.router.navigate(['/admin','dashboard'])\r\n    //   this.submitted = false;\r\n    // }, () => {\r\n    //   this.submitted = false\r\n    // });\r\n\r\n    this.form.reset;\r\n    this.router.navigate(['/admin','dashboard'])\r\n    this.submitted = false;\r\n\r\n  }\r\n}\r\n","<form class=\"card\" [formGroup]=\"form\">\r\n  <h2>Войти в панель администратора</h2>\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div class=\"alert alert-info\" *ngIf=\"message\">\r\n    {{ message }}\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    <div\r\n      *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('email').errors.required\"\r\n      >Нужно ввести email</small>\r\n      <small\r\n        *ngIf=\"form.get('email').errors.email\"\r\n      >Email должен быть email</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"password\">Password:</label>\r\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    <div\r\n      *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n      class=\"validation\">\r\n      <small\r\n        *ngIf=\"form.get('password').errors.required\"\r\n      >Нужно ввести пароль</small>\r\n\r\n      <small\r\n        *ngIf=\"form.get('password').errors.minlength\"\r\n      >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\r\n        Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    [disabled]=\"form.invalid || submitted\"\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submit()\"\r\n  >Войти</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout($event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.auth.logout();\r\n    this.router.navigate(['/admin','login'])\r\n  }\r\n}\r\n","<app-alert></app-alert>\r\n\r\n<nav class=\"navbar bg-primary\">\r\n  <h1>\r\n    <a routerLink=\"/\">Angular Admin</a>\r\n  </h1>\r\n\r\n  <ul *ngIf=\"auth.isAuthenticated()\">\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','dashboard']\">Главная</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','create']\">Создать</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Product} from '../../shared/interfaces/Product';\r\n\r\n@Pipe({\r\n  name: 'searchProducts'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform{\r\n  transform(products: Product[], search = ''): Product[] {\r\n    if (!search.trim()) {\r\n      return products\r\n    }\r\n\r\n    return products.filter(product => {\r\n      return product.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated()) {\r\n      console.log('ping');\r\n      return true\r\n    } else {\r\n      this.auth.logout()\r\n      this.router.navigate(['/admin','login'], {\r\n        queryParams: {\r\n          loginAgain: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {FbAuthResponse} from '../../../shared/interfaces';\r\nimport {Observable, Subject, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {User} from '../../../shared/interfaces/User';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  public error$: Subject<string> = new Subject<string>();\r\n  apiUrl: string = 'api/account';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get user(): string {\r\n    const expDate = new Date(localStorage.getItem('expires'));\r\n    if (new Date > expDate) {\r\n     this.logout();\r\n     return null;\r\n    }\r\n\r\n    return localStorage.getItem('user-name')\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    // user.returnSecureToken = true;\r\n    return this.http.post(`${this.apiUrl}/login`, user)\r\n     .pipe(\r\n       // tap(this.setToken),\r\n       tap(this.setUser),\r\n       catchError(this.handleError.bind(this))\r\n     )\r\n  }\r\n\r\n  logout() {\r\n    this.setToken(null)\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.user;\r\n    // return true;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    console.log(error)\r\n    this.error$.next(error.error)\r\n    // console.log('this.error$',this.error$)\r\n    return throwError(error)\r\n  }\r\n\r\n  private setToken(response: FbAuthResponse | null) {\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + +response.expiresIn*1000);\r\n      localStorage.setItem('fb-token', response.idToken)\r\n      localStorage.setItem('fb-token-exp', expDate.toString())\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n  }\r\n\r\n  private setUser(response: User | null) {\r\n    // console.log(response);\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + 60000); //1 мин\r\n      localStorage.setItem('expires', expDate.toString())\r\n      localStorage.setItem('user-name', response.name)\r\n      localStorage.setItem('user-email', response.email)\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n  }\r\n\r\n  register(user: User): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/register`, user)\r\n        .pipe(\r\n            // tap(this.setToken),\r\n            tap(this.setUser),\r\n            catchError(this.handleError.bind(this))\r\n        )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\r\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {ProductPageComponent} from './product-page/product-page.component';\r\nimport {CartPageComponent} from './cart-page/cart-page.component';\r\nimport {LoginPageComponent} from './login-page/login-page.component';\r\nimport {RegisterPageComponent} from './register-page/register-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainLayoutComponent, children: [\r\n      {path: '', redirectTo: '/', pathMatch: 'full'},\r\n      {path: '', component: HomePageComponent},\r\n      {path: 'product/:id', component: ProductPageComponent},\r\n      {path: 'cart', component: CartPageComponent},\r\n      {path: 'login', component: LoginPageComponent},\r\n      {path: 'register', component: RegisterPageComponent}\r\n    ]\r\n  },\r\n  //{\r\n  //  // path: 'admin', loadChildren: './admin/admin.module#AdminModule'\r\n  //  path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n  //}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n} ","<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ProductPageComponent } from './product-page/product-page.component';\r\nimport { ProductComponent } from './shared/components/product/product.component';\r\nimport {AdminModule} from './admin/admin.module';\r\nimport { CartPageComponent } from './cart-page/cart-page.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component'\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        SharedModule,\r\n        AdminModule,\r\n        ReactiveFormsModule\r\n    ],      \r\n    declarations: [\r\n        AppComponent,\r\n        MainLayoutComponent,\r\n        HomePageComponent,\r\n        ProductPageComponent,\r\n        ProductComponent,\r\n        CartPageComponent,\r\n        LoginPageComponent,\r\n        RegisterPageComponent\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Cart} from '../shared/interfaces/Cart';\r\nimport {Subscription} from 'rxjs';\r\nimport {CartService} from '../shared/services/cart.service';\r\nimport {AlertService} from '../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-page',\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrls: ['./cart-page.component.scss']\r\n})\r\nexport class CartPageComponent implements OnInit, OnDestroy {\r\n  carts: Cart[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  loaded: boolean\r\n\r\n  constructor(\r\n      private alert: AlertService,\r\n      private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.cartService.getAll().subscribe(carts => {\r\n      this.carts = carts\r\n      this.loaded = true;\r\n    })\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.cartService.remove(id).subscribe(() => {\r\n      this.carts = this.carts.filter(cart => cart.id !== id);\r\n      this.cartService.updateTotal();\r\n      this.loaded = true;\r\n      this.alert.danger('Продукт был удален из корзины');\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"carts.length; else loading\">\n    <table>\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th>Количество</th>\n            <th>Цена</th>\n            <th>Действие</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let cart of carts ; let idx = index\">\n            <td>{{ idx + 1 }}</td>\n            <td>{{ cart.product.name }}</td>\n            <td>{{ cart.quantity }}</td>\n            <td>{{ cart.price | currency:'USD'}}</td>\n            <td>\n                <a (click)=\"remove(cart.id)\">Удалить</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #loading>\n    <div *ngIf=\"loaded; else inProcess\">\n        <p>Корзина пуста</p>\n    </div>\n    <ng-template #inProcess>\n        <p class=\"text-center\">Идет загрузка...</p>\n    </ng-template>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Observable} from 'rxjs';\nimport {Product} from '../shared/interfaces/Product';\nimport {AuthService} from '../admin/shared/services/auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n    products$: Observable<Product[]>;\n    //products: Product[]\n\n  constructor(\n    private productsService: ProductsService,\n    private auth: AuthService\n  ) { }\n\n    ngOnInit(): void {\n        //this.products = [];\n      this.products$ = this.productsService.getAll()\n  }\n\n}\n","<div\r\n  *ngIf=\"products$ | async as products; else loading\"\r\n  class=\"products\"\r\n>\r\n  <app-product\r\n    *ngFor=\"let product of products\"\r\n    [product]=\"product\"\r\n    [showAddCart]=\"auth.isAuthenticated()\"\r\n  ></app-product>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Загружаю продукты...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../admin/shared/services/auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {User} from '../shared/interfaces/User';\nimport {CartService} from '../shared/services/cart.service';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  form: FormGroup\n  submitted: boolean =  false\n  message: string\n\n  constructor(\n      public auth: AuthService,\n      private router: Router,\n      private route: ActivatedRoute,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe((params: Params) => {\n    //   if (params['loginAgain']) {\n    //     this.message = 'Пожалуйста, введите данные.';\n    //   } else if (params['authFailed']) {\n    //     this.message = 'Сессия истекла. Введите данные заново.';\n    //   }\n    // })\n\n    this.form = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(5)\n      ])\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true;\n\n    const user: User = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    this.auth.login(user).subscribe(() => {\n      this.form.reset;\n      this.router.navigate(['/'])\n      this.submitted = false;\n      this.cartService.updateTotal();\n    }, () => {\n      this.submitted = false\n    });\n  }\n}\n","<form class=\"card\" [formGroup]=\"form\">\n    <h2>Войти</h2>\n\n    <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\n        {{ error }}\n    </div>\n\n    <div class=\"alert alert-info\" *ngIf=\"message\">\n        {{ message }}\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div\n                *ngIf=\"form.get('email').touched && form.get('email').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('email').errors.required\"\n            >Нужно ввести email</small>\n            <small\n                    *ngIf=\"form.get('email').errors.email\"\n            >Email должен быть email</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\">\n        <div\n                *ngIf=\"form.get('password').touched && form.get('password').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('password').errors.required\"\n            >Нужно ввести пароль</small>\n\n            <small\n                    *ngIf=\"form.get('password').errors.minlength\"\n            >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\n                Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\n        </div>\n    </div>\n\n\n    <button\n            [disabled]=\"form.invalid || submitted\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            (click)=\"submit()\"\n    >Войти</button>\n\n    <a [routerLink]=\"['/register']\">Зарегистрироваться</a>\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Product} from '../shared/interfaces/Product';\nimport {switchMap} from 'rxjs/operators';\nimport {CartService} from '../shared/services/cart.service';\nimport {AlertService} from '../shared/services/alert.service';\nimport {AuthService} from '../admin/shared/services/auth.service';\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.scss']\n})\nexport class ProductPageComponent implements OnInit {\n  product$: Observable<Product>\n\n  constructor(\n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private productsService: ProductsService,\n    private cartService: CartService,\n    private alert: AlertService\n  ) {\n      \n  }\n\n    ngOnInit(): void {        \n        console.log('init ProductPageComponent');\n        this.product$ = this.route.params\n          .pipe(switchMap((params: Params) => {\n            return this.productsService.getById(params['id'])\n          }))\n  }\n\n    addToCart(id: string) {\n        this.cartService.addToCart(id);\n        this.alert.success('Продукт был добавлен в корзину')\n    }\n}\n","<div *ngIf=\"product$ | async as product; else loading\">\n  <div class=\"product\">\n    <div class=\"header\">\n      <h1>{{ product.name }}</h1>\n      <button routerLink=\"/\" class=\"btn btn-link\">На главную</button>\n    </div>\n\n    <div class=\"info\">\n      <strong>{{ product.company }}</strong>\n      <small>{{ product.price | currency:'USD' }}</small>\n    </div>\n\n  </div>\n\n  <button *ngIf=\"this.auth.isAuthenticated()\"\n          (click)=\"addToCart(product.id)\"\n          class=\"btn btn-success\"\n  >Добавить в корзину</button>\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загрузка продукта...</p>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../admin/shared/services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MyValidators} from '../shared/my.validators';\nimport {User} from '../shared/interfaces/User';\nimport {CartService} from '../shared/services/cart.service';\n\n@Component({\n  selector: 'register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  form: FormGroup\n  submitted: boolean =  false;\n  message: string\n\n  constructor(\n      public auth: AuthService,\n      private router: Router,\n      private route: ActivatedRoute,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe((params: Params) => {\n    //   if (params['loginAgain']) {\n    //     this.message = 'Пожалуйста, введите данные.';\n    //   } else if (params['authFailed']) {\n    //     this.message = 'Сессия истекла. Введите данные заново.';\n    //   }\n    // })\n\n    this.form = new FormGroup({\n      name: new FormControl(null, [\n        Validators.required\n      ]),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n\n      ]),\n      confirmPassword: new FormControl(null, [\n        Validators.required\n      ])\n    },[MyValidators.confirmPassword])\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true;\n\n    const user: User = {\n      name: this.form.value.name,\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    this.auth.register(user).subscribe(() => {\n      this.form.reset;\n      this.router.navigate(['/'])\n      this.submitted = false;\n      this.cartService.updateTotal();\n    }, () => {\n      this.submitted = false\n    });\n  }\n\n}\n","<form class=\"card\" [formGroup]=\"form\">\n    <h2>Регистрация</h2>\n\n    <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\n        {{ error }}\n    </div>\n\n    <div class=\"alert alert-info\" *ngIf=\"message\">\n        {{ message }}\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"name\">Введите имя:</label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\">\n        <div\n                *ngIf=\"form.get('name').touched && form.get('name').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('name').errors.required\"\n            >Нужно ввести имя</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"email\">Введите Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div\n                *ngIf=\"form.get('email').touched && form.get('email').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('email').errors.required\"\n            >Нужно ввести email</small>\n            <small\n                    *ngIf=\"form.get('email').errors.email\"\n            >Email должен быть email</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\">\n        <div\n                *ngIf=\"form.get('password').touched && form.get('password').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('password').errors.required\"\n            >Нужно ввести пароль</small>\n\n            <small\n                    *ngIf=\"form.get('password').errors.minlength\"\n            >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\n                Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('confirmPassword').touched && form.get('confirmPassword').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"confirmPassword\">Confirm password:</label>\n        <input id=\"confirmPassword\" type=\"password\" formControlName=\"confirmPassword\">\n        <div\n                *ngIf=\"form.get('confirmPassword').touched && form.get('confirmPassword').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('confirmPassword').errors.required\"\n            >Нужно подтвердить пароль</small>\n        </div>\n\n        <small\n                *ngIf=\"form.get('confirmPassword').touched && form.errors && form.errors.notEqual\"\n        >Пароли должны совпадать</small>\n\n    </div>\n\n    <button\n            [disabled]=\"form.invalid || submitted\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            (click)=\"submit()\"\n    >Зарегистрироваться</button>\n\n    <a [routerLink]=\"['/login']\">Войти</a>\n</form>\n\n\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Alert, AlertService} from \"../../services/alert.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() delay = 3000;\r\n  public text: string\r\n  public type = 'success'\r\n  aSub: Subscription\r\n\r\n  constructor(\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(){\r\n    this.aSub = this.alertService.alert$.subscribe((alert: Alert) => {\r\n      this.text = alert.text\r\n      this.type = alert.type\r\n\r\n      const timeout = setTimeout(() => {\r\n        clearTimeout(timeout)\r\n        this.text = ''\r\n      }, this.delay)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"text\" class=\"alert-wrap\">\r\n  <div\r\n    class=\"alert\"\r\n    [ngClass]=\" {\r\n     'alert-success': type === 'success',\r\n     'alert-warning': type === 'warning',\r\n     'alert-danger': type === 'danger'\r\n    }\"\r\n    >\r\n    <p>{{ text }}</p>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from '../../../admin/shared/services/auth.service';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  totalAmount: string\n  cartSub: Subscription\n\n  constructor(\n      public auth: AuthService,\n      private cartService: CartService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.cartSub = this.cartService.totalAmount$.subscribe((value) => {\n      this.totalAmount = value\n    })\n\n    this.cartService.updateTotal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cartSub) {\n      this.cartSub.unsubscribe()\n    }\n  }\n\n  logout($event: MouseEvent) {\n    event.preventDefault();\n    this.auth.logout();\n    this.router.navigate(['/login'])\n  }\n}\n","<app-alert [delay]=\"1000\">dfsdf</app-alert>\n<nav class=\"navbar bg-primary\">\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Angular Blog</a>\n    </li>\n    <li routerLinkActive=\"active\" *ngIf=\"auth.isAuthenticated()\">\n      <a [routerLink]=\"['/cart']\">Корзина ({{ totalAmount | currency:'USD' }})</a>\n    </li>\n\n    <li routerLinkActive=\"active\">\n      <a [routerLink]=\"['/admin']\">Админка</a>\n    </li>\n\n    <li *ngIf=\"auth.isAuthenticated(); else signIn\" routerLinkActive=\"active\">\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\n    </li>\n    <ng-template #signIn>\n      <li routerLinkActive=\"active\">\n        <a [routerLink]=\"['/login']\">Войти</a>\n      </li>\n    </ng-template>\n  </ul>\n\n  <div *ngIf=\"auth.user as userName\">\n    <h5>{{ userName }}</h5>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Product} from '../../interfaces/Product';\r\nimport {CartService} from '../../services/cart.service';\r\nimport {AlertService} from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  @Input() product: Product\r\n  @Input() showAddCart: boolean\r\n\r\n  constructor(\r\n      private alert: AlertService,\r\n      private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addToCart(id: string) {\r\n    this.cartService.addToCart(id);\r\n    this.alert.success('Продукт был добавлен в корзину')\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"cart-header\">\r\n    <h2>{{ product.name }}</h2>\r\n\r\n    <small>{{ product.price | currency:'USD' }}</small>\r\n  </div>\r\n\r\n  <div>\r\n    <small>{{ product.company }}</small>\r\n  </div>\r\n\r\n  <button\r\n    [routerLink]=\"['/product', product.id]\"\r\n    class=\"btn btn-dark\"\r\n  >Открыть</button>\r\n\r\n  <button *ngIf=\"showAddCart\"\r\n          (click)=\"addToCart(product.id)\"\r\n          class=\"btn btn-success\"\r\n  >Добавить в корзину</button>\r\n</div>\r\n","import {FormGroup} from '@angular/forms';\r\n\r\nexport class MyValidators {\r\n    static confirmPassword(group: FormGroup) {\r\n        let pass = group.get('password').value;\r\n        let confirmPass = group.get('confirmPassword').value;\r\n\r\n        return pass === confirmPass ? null : { notEqual: true }\r\n    }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    // console.log(this.alert$);\r\n    this.alert$.next({type: 'success', text})\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {Cart} from '../interfaces/Cart';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CartService {\r\n    public totalAmount$ = new Subject<string>();\r\n\r\n    apiUrl: string = 'https://localhost:44344/api/cart';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(productId: string): Observable<void> {\r\n        return this.http.post<void>(`${this.apiUrl}/${productId}`, null);\r\n    }\r\n\r\n    getAll(): Observable<Cart[]> {\r\n        return this.http.get<Cart[]>(`${this.apiUrl}`);\r\n    }\r\n\r\n    getById(id: string): Observable<Cart> {\r\n        return this.http.get<Cart>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    update(cart: Cart): Observable<Cart> {\r\n        return this.http.put<Cart>(`${this.apiUrl}/${cart.id}`, cart);\r\n    }\r\n\r\n    remove(id: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    updateTotal() {\r\n        this.http.get(`${this.apiUrl}/getTotal`).subscribe((response) => {\r\n            this.totalAmount$.next(response.toString())\r\n        })\r\n    }\r\n\r\n    addToCart(id: string) {\r\n        this.create(id).subscribe(() => {\r\n            this.updateTotal();\r\n        })\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../interfaces/Product';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ProductsService {\r\n    apiUrl: string = 'https://localhost:44344/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(product: Product): Observable<Product> {\r\n      return this.http.post<Product>(`${this.apiUrl}`, product);\r\n  }\r\n\r\n  getAll(): Observable<Product[]> {\r\n      return this.http.get<Product[]>(`${this.apiUrl}`);\r\n  }\r\n\r\n  getById(id: string): Observable<Product> {\r\n      return this.http.get<Product>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  update(product: Product): Observable<Product> {\r\n      return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\r\n  }\r\n\r\n  remove(id: string): Observable<void> {\r\n      return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AlertComponent} from './components/alert/alert.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AlertService} from './services/alert.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    AlertComponent\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    AlertComponent\r\n  ],\r\n  providers:[AlertService]\r\n})\r\n\r\nexport class SharedModule {\r\n\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"],"sourceRoot":"webpack:///"}