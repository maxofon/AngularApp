{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/product-page/product-page.component.ts","webpack:///src/app/product-page/product-page.component.html","webpack:///src/app/shared/components/main-layout/main-layout.component.ts","webpack:///src/app/shared/components/main-layout/main-layout.component.html","webpack:///src/app/shared/products.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","HomePageComponent","productsService","ProductPageComponent","route","product$","params","pipe","getById","MainLayoutComponent","ProductsService","http","apiUrl","product","post","response","get","Object","map","key","patch","providedIn","SharedModule","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\r\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {ProductPageComponent} from './product-page/product-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainLayoutComponent, children: [\r\n      {path: '', redirectTo: '/', pathMatch: 'full'},\r\n      {path: '', component: HomePageComponent},\r\n      {path: 'product/:id', component: ProductPageComponent}\r\n    ]\r\n  },\r\n  //{\r\n  //  // path: 'admin', loadChildren: './admin/admin.module#AdminModule'\r\n  //  path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n  //}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n} ","<p>sdfasfd</p>\r\n<router-outlet></router-outlet>\r\n\r\n<!--<h1>Список моделей</h1>\r\n<input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />\r\n<table *ngIf=\"tableMode; else create\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Модель</td>\r\n            <td>Производитель</td>\r\n            <td>Цена</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let p of products\">\r\n            <ng-template [ngIf]=\"product?.id != p.id\" [ngIfElse]=\"edit\">\r\n                <td>{{p?.name}}</td>\r\n                <td>{{p?.company}}</td>\r\n                <td>{{p?.price}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editProduct(p)\">Изменить</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button>\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>-->\r\n<!--шаблон для редактирования-->\r\n<!--<ng-template #edit>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-sm btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-sm btn-warning\" />\r\n    </td>\r\n</ng-template>-->\r\n<!--шаблон для добавления-->\r\n<!--<ng-template #create>\r\n    <div class=\"form-group\">\r\n        <label>Модель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Производитель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Цена</label>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>-->\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ProductPageComponent } from './product-page/product-page.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        SharedModule\r\n    ],      \r\n    declarations: [\r\n        AppComponent,\r\n        MainLayoutComponent,\r\n        HomePageComponent,\r\n        ProductPageComponent,\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../shared/products.service';\nimport {Observable} from 'rxjs';\nimport {Product} from '../shared/interfaces';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n    //products$: Observable<Product[]>;\n    products: Product[]\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n      //this.products$ = this.productsService.getAll()\n  }\n\n}\n","<div\r\n  <!--*ngIf=\"products$ | async as products; else loading\"-->\r\n  class=\"products\"\r\n>\r\n  <app-product\r\n    *ngFor=\"let product of products\"\r\n    [product]=\"product\"\r\n  ></app-product>\r\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загружаю продукты...</p>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ProductsService} from '../shared/products.service';\nimport {Product} from '../shared/interfaces';\nimport {switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.scss']\n})\nexport class ProductPageComponent implements OnInit {\n\n  product$: Observable<Product>\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n    this.product$ = this.route.params\n      .pipe(switchMap((params: Params) => {\n        return this.productsService.getById(params['id'])\n      }))\n  }\n\n}\n","<div *ngIf=\"product$ | async as product; else loading\">\n  <div class=\"product\">\n    <div class=\"header\">\n      <h1>{{ product.title }}</h1>\n\n      <button routerLink=\"/\" class=\"btn btn-link\">На главную</button>\n    </div>\n\n    <div class=\"info\">\n      <strong>{{ product.author }}</strong>\n      <small>{{ product.date | date:'medium':null:'ru' }}</small>\n    </div>\n\n    <div>\n      <quill-view-html [content]=\"product.text\"></quill-view-html>\n    </div>\n  </div>\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загрузка продукта...</p>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar main\">\n  <h1>Angular Blog</h1>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, pipe} from 'rxjs';\r\nimport {FbCreateResponse, Product} from './interfaces';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ProductsService {\r\n    apiUrl: string = 'https://localhost:44344/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(product: Product): Observable<Product> {\r\n      return this.http.post(`${this.apiUrl}/products.json`, product)\r\n      .pipe(map( (response: FbCreateResponse) => {\r\n        return {\r\n          ...product,\r\n          //id: response.name,\r\n          //date: new Date(product.date)\r\n        };\r\n    }));\r\n  }\r\n\r\n  getAll(): Observable<Product[]> {\r\n      return this.http.get(`${this.apiUrl}.json`)\r\n      .pipe(map((response: {[key: string]: any}) => {\r\n        return Object\r\n          .keys(response)\r\n          .map(key => ({\r\n            ...response[key],\r\n            //id: key,\r\n            //date: new Date(response[key].date)\r\n          }));\r\n      }));\r\n  }\r\n\r\n    getById(id: string): Observable<Product> {\r\n        return this.http.get<Product>(`${this.apiUrl}/products/${id}.json`)\r\n            .pipe(map((product: Product) => {\r\n        return {\r\n          ...product,id,\r\n          //date: new Date(product.date)\r\n        };\r\n      }));\r\n  }\r\n\r\n    update(product: Product): Observable<Product> {\r\n        return this.http.patch<Product>(`${this.apiUrl}/products/${product.id}.json`, product)\r\n  }\r\n\r\n  remove(id: string): Observable<void> {\r\n      return this.http.delete<void>(`${this.apiUrl}/products/${id}.json`);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    HttpClientModule\r\n  ]\r\n})\r\n\r\nexport class SharedModule {\r\n\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}