{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/create-page/create-page.component.ts","webpack:///src/app/admin/create-page/create-page.component.html","webpack:///src/app/admin/dashboard-page/dashboard-page.component.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.html","webpack:///src/app/admin/edit-page/edit-page.component.ts","webpack:///src/app/admin/edit-page/edit-page.component.html","webpack:///src/app/admin/login-page/login-page.component.ts","webpack:///src/app/admin/login-page/login-page.component.html","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.ts","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.html","webpack:///src/app/admin/shared/search.pipe.ts","webpack:///src/app/admin/shared/services/alert.service.ts","webpack:///src/app/admin/shared/services/auth.guard.ts","webpack:///src/app/admin/shared/services/auth.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart-page/cart-page.component.ts","webpack:///src/app/cart-page/cart-page.component.html","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/product-page/product-page.component.ts","webpack:///src/app/product-page/product-page.component.html","webpack:///src/app/shared/components/alert/alert.component.ts","webpack:///src/app/shared/components/alert/alert.component.html","webpack:///src/app/shared/components/main-layout/main-layout.component.ts","webpack:///src/app/shared/components/main-layout/main-layout.component.html","webpack:///src/app/shared/components/product/product.component.ts","webpack:///src/app/shared/components/product/product.component.html","webpack:///src/app/shared/services/alert.service.ts","webpack:///src/app/shared/services/cart.service.ts","webpack:///src/app/shared/services/products.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminModule","forChild","path","component","children","redirectTo","pathMatch","canActivate","declarations","imports","providers","CreatePageComponent","alert","productsService","form","name","required","company","price","invalid","product","value","create","subscribe","reset","success","console","log","submit","selector","templateUrl","styleUrls","DashboardPageComponent","products","searchStr","pSub","getAll","unsubscribe","dSub","remove","filter","danger","EditPageComponent","route","submitted","params","pipe","getById","disabled","uSub","update","LoginPageComponent","auth","router","queryParams","message","email","password","minLength","navigate","AdminLayoutComponent","$event","event","preventDefault","logout","SearchPipe","search","trim","toLowerCase","includes","AlertService","alert$","text","next","type","providedIn","AuthGuard","state","isAuthenticated","loginAgain","AuthService","http","error$","user","returnSecureToken","setToken","error","response","expDate","Date","getTime","expiresIn","localStorage","setItem","idToken","toString","clear","routes","AppRoutingModule","forRoot","preloadingStrategy","AppComponent","AppModule","bootstrap","CartPageComponent","cartService","carts","loaded","cart","updateTotal","HomePageComponent","products$","ProductPageComponent","product$","AlertComponent","alertService","delay","aSub","timeout","setTimeout","clearTimeout","MainLayoutComponent","cartSub","totalAmount$","totalAmount","ProductComponent","CartService","apiUrl","productId","post","get","put","ProductsService","SharedModule","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { CreatePageComponent } from './create-page/create-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {AuthGuard} from \"./shared/services/auth.guard\";\r\nimport {SearchPipe} from './shared/search.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLayoutComponent,\r\n    LoginPageComponent,\r\n    DashboardPageComponent,\r\n    CreatePageComponent,\r\n    EditPageComponent,\r\n    SearchPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'admin', component: AdminLayoutComponent, children: [\r\n          {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n          {path: 'login', component: LoginPageComponent},\r\n          {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n          {path: 'create', component: CreatePageComponent, canActivate: [AuthGuard]},\r\n          {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n        ]\r\n      }\r\n    ]),\r\n    FormsModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Product} from \"../../shared/interfaces/Product\";\r\nimport {ProductsService} from \"../../shared/services/products.service\";\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      company: new FormControl(null, Validators.required),\r\n      price: new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const product: Product = {\r\n      name: this.form.value.name,\r\n      company: this.form.value.company,\r\n      price: this.form.value.price\r\n    }\r\n\r\n    this.productsService.create(product).subscribe(() => {\r\n      this.form.reset()\r\n      this.alert.success('Создан новый пост')\r\n    })\r\n\r\n    console.log('new product', product);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <h1>Создание нового продукта</h1>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"name\">Название продукта:</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    <div\r\n      *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('name').errors.required\"\r\n      >Введите название продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('company').touched && form.get('company').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"company\">Название компании:</label>\r\n    <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    <div\r\n      *ngIf=\"form.get('company').touched && form.get('company').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('company').errors.required\"\r\n      >Введите название компании</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n          [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n          class=\"form-control\"\r\n  >\r\n    <label for=\"price\">Цена продукта:</label>\r\n    <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n    <div\r\n            *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n            class=\"validation\"\r\n    >\r\n      <small\r\n              *ngIf=\"form.get('price').errors.required\"\r\n      >Введите цену продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-block btn-dark\"\r\n    [disabled]=\"form.invalid\"\r\n    >Создать продукт</button>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.scss']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  products: Product[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  searchStr = '';\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.productsService.getAll().subscribe(products => {\r\n      this.products = products\r\n      // console.log('Products: ',this.products);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.productsService.remove(id).subscribe(() => {\r\n      this.products = this.products.filter(product => product.id !== id);\r\n      this.alert.danger('Продукт был удален');\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"products.length; else loading\">\r\n  <div class=\"form-control\">\r\n    <input type=\"text\" placeholder=\"Найти продукт по названию...\" [(ngModel)]=\"searchStr\">\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Название</th>\r\n      <th>Компания</th>\r\n      <th>Цена</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let product of products | searchProducts:searchStr ; let idx = index\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ product.name }}</td>\r\n      <td>{{ product.company }}</td>\r\n      <td>{{ product.price | currency:'USD' }}</td>\r\n      <td>\r\n        <button\r\n          class=\"btn btn-link open\"\r\n          [routerLink]=\"['/admin','product', product.id, 'edit']\"\r\n        >Открыть</button>\r\n\r\n        <a (click)=\"remove(product.id)\">Удалить</a>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-page',\r\n  templateUrl: './edit-page.component.html',\r\n  styleUrls: ['./edit-page.component.scss']\r\n})\r\nexport class EditPageComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  product: Product\r\n  submitted: boolean = false\r\n  uSub: Subscription\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(switchMap((params: Params) => {\r\n        return this.productsService.getById(params['id'])\r\n      }))\r\n      .subscribe((product: Product) => {\r\n        this.product = product\r\n        this.form = new FormGroup({\r\n          name: new FormControl(product.name, Validators.required),\r\n          company: new FormControl({value: product.company, disabled: true}, Validators.required),\r\n          price: new FormControl(product.price, Validators.required)\r\n        })\r\n      })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    this.uSub = this.productsService.update({\r\n      ...this.product,\r\n      name: this.form.value.name,\r\n      price: this.form.value.price\r\n    }).subscribe(() => {\r\n      this.submitted = false\r\n      this.alert.success('Продукт был обновлен')\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.uSub) {\r\n      this.uSub.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"form; else loading\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n      class=\"form-control\"\r\n    >\r\n      <label for=\"name\">Название продукта:</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n        class=\"validation\"\r\n      >\r\n        <small\r\n          *ngIf=\"form.get('name').errors.required\"\r\n        >Введите название продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-control\">\r\n      <label for=\"company\">Название компании:</label>\r\n      <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    </div>\r\n\r\n    <div\r\n            [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n            class=\"form-control\"\r\n    >\r\n      <label for=\"price\">Цена продукта:</label>\r\n      <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n      <div\r\n              *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n              class=\"validation\"\r\n      >\r\n        <small\r\n                *ngIf=\"form.get('price').errors.required\"\r\n        >Введите цену продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"form.invalid || submitted\"\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n    >Обновить</button>\r\n  </form>\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../../shared/interfaces/User';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup\r\n  submitted: boolean =  false;\r\n  message: string\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['loginAgain']) {\r\n        this.message = 'Пожалуйста, введите данные.';\r\n      } else if (params['authFailed']) {\r\n        this.message = 'Сессия истекла. Введите данные заново.';\r\n      }\r\n    })\r\n\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    // const user: User = {\r\n    //   email: this.form.value.email,\r\n    //   password: this.form.value.password\r\n    // }\r\n\r\n    // this.auth.login(user).subscribe(() => {\r\n    //   this.form.reset;\r\n    //   this.router.navigate(['/admin','dashboard'])\r\n    //   this.submitted = false;\r\n    // }, () => {\r\n    //   this.submitted = false\r\n    // });\r\n\r\n    this.form.reset;\r\n    this.router.navigate(['/admin','dashboard'])\r\n    this.submitted = false;\r\n\r\n  }\r\n}\r\n","<form class=\"card\" [formGroup]=\"form\">\r\n  <h2>Войти в панель администратора</h2>\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div class=\"alert alert-info\" *ngIf=\"message\">\r\n    {{ message }}\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    <div\r\n      *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('email').errors.required\"\r\n      >Нужно ввести email</small>\r\n      <small\r\n        *ngIf=\"form.get('email').errors.email\"\r\n      >Email должен быть email</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"password\">Password:</label>\r\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    <div\r\n      *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n      class=\"validation\">\r\n      <small\r\n        *ngIf=\"form.get('password').errors.required\"\r\n      >Нужно ввести пароль</small>\r\n\r\n      <small\r\n        *ngIf=\"form.get('password').errors.minlength\"\r\n      >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\r\n        Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    [disabled]=\"form.invalid || submitted\"\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submit()\"\r\n  >Войти</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout($event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.auth.logout();\r\n    this.router.navigate(['/admin','login'])\r\n  }\r\n}\r\n","<app-alert></app-alert>\r\n\r\n<nav class=\"navbar bg-primary\">\r\n  <h1>\r\n    <a routerLink=\"/\">Angular Blog</a>\r\n  </h1>\r\n\r\n  <ul *ngIf=\"auth.isAuthenticated()\">\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','dashboard']\">Главная</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','create']\">Создать</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Product} from '../../shared/interfaces/Product';\r\n\r\n@Pipe({\r\n  name: 'searchProducts'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform{\r\n  transform(products: Product[], search = ''): Product[] {\r\n    if (!search.trim()) {\r\n      return products\r\n    }\r\n\r\n    return products.filter(product => {\r\n      return product.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    this.alert$.next({type: 'success', text})\r\n\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated()) {\r\n      console.log('ping');\r\n      return true\r\n    } else {\r\n      this.auth.logout()\r\n      this.router.navigate(['/admin','login'], {\r\n        queryParams: {\r\n          loginAgain: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {FbAuthResponse} from '../../../shared/interfaces';\r\nimport {Observable, Subject, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {User} from '../../../shared/interfaces/User';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  public error$: Subject<string> = new Subject<string>()\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get token(): string {\r\n    //const expDate = new Date(localStorage.getItem('fb-token-exp'));\r\n    //if (new Date > expDate) {\r\n    //  this.logout();\r\n    //  return null;\r\n    //}\r\n\r\n    //return localStorage.getItem('fb-token')\r\n\r\n      return 'test'\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    user.returnSecureToken = true;\r\n    //return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`, user)\r\n    //  .pipe(\r\n    //    tap(this.setToken),\r\n    //    catchError(this.handleError.bind(this))\r\n    //  )\r\n      return new Subject<string>();\r\n  }\r\n\r\n  logout() {\r\n    this.setToken(null)\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    // return !!this.token;\r\n    return true;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    const {message} = error.error.error\r\n\r\n    switch (message) {\r\n      case 'INVALID_EMAIL':\r\n        this.error$.next('Неверный email')\r\n        break\r\n      case 'INVALID_PASSWORD':\r\n        this.error$.next('Неверный пароль')\r\n        break\r\n      case 'EMAIL_NOT_FOUND':\r\n        this.error$.next('Такого email нет')\r\n        break\r\n    }\r\n\r\n    console.log(this.error$)\r\n\r\n    return throwError(error)\r\n  }\r\n\r\n  private setToken(response: FbAuthResponse | null) {\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + +response.expiresIn*1000);\r\n      localStorage.setItem('fb-token', response.idToken)\r\n      localStorage.setItem('fb-token-exp', expDate.toString())\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\r\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {ProductPageComponent} from './product-page/product-page.component';\r\nimport {CartPageComponent} from './cart-page/cart-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainLayoutComponent, children: [\r\n      {path: '', redirectTo: '/', pathMatch: 'full'},\r\n      {path: '', component: HomePageComponent},\r\n      {path: 'product/:id', component: ProductPageComponent},\r\n      {path: 'cart', component: CartPageComponent}\r\n    ]\r\n  },\r\n  //{\r\n  //  // path: 'admin', loadChildren: './admin/admin.module#AdminModule'\r\n  //  path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n  //}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n} ","<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ProductPageComponent } from './product-page/product-page.component';\r\nimport { ProductComponent } from './shared/components/product/product.component';\r\nimport {AdminModule} from './admin/admin.module';;\r\nimport { CartPageComponent } from './cart-page/cart-page.component'\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        SharedModule,\r\n        AdminModule\r\n    ],      \r\n    declarations: [\r\n        AppComponent,\r\n        MainLayoutComponent,\r\n        HomePageComponent,\r\n        ProductPageComponent,\r\n        ProductComponent,\r\n        CartPageComponent\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Cart} from '../shared/interfaces/Cart';\r\nimport {AlertService} from '../admin/shared/services/alert.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {CartService} from '../shared/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-page',\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrls: ['./cart-page.component.scss']\r\n})\r\nexport class CartPageComponent implements OnInit, OnDestroy {\r\n  carts: Cart[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  loaded: boolean\r\n\r\n  constructor(\r\n      private alert: AlertService,\r\n      private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.cartService.getAll().subscribe(carts => {\r\n      this.carts = carts\r\n      this.loaded = true;\r\n    })\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.cartService.remove(id).subscribe(() => {\r\n      this.carts = this.carts.filter(cart => cart.id !== id);\r\n      this.cartService.updateTotal();\r\n      this.loaded = true;\r\n      this.alert.danger('Продукт был удален из корзины');\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"carts.length; else loading\">\n    <table>\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th>Количество</th>\n            <th>Цена</th>\n            <th>Действие</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let cart of carts ; let idx = index\">\n            <td>{{ idx + 1 }}</td>\n            <td>{{ cart.product.name }}</td>\n            <td>{{ cart.quantity }}</td>\n            <td>{{ cart.price | currency:'USD'}}</td>\n            <td>\n                <a (click)=\"remove(cart.id)\">Удалить</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #loading>\n    <div *ngIf=\"loaded; else inProcess\">\n        <p>Корзина пуста</p>\n    </div>\n    <ng-template #inProcess>\n        <p class=\"text-center\">Идет загрузка...</p>\n    </ng-template>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Observable} from 'rxjs';\nimport {Product} from '../shared/interfaces/Product';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n    products$: Observable<Product[]>;\n    //products: Product[]\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n    ngOnInit(): void {\n        //this.products = [];\n      this.products$ = this.productsService.getAll()\n  }\n\n}\n","<div\r\n  *ngIf=\"products$ | async as products; else loading\"\r\n  class=\"products\"\r\n>\r\n  <app-product\r\n    *ngFor=\"let product of products\"\r\n    [product]=\"product\"\r\n  ></app-product>\r\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загружаю продукты...</p>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Product} from '../shared/interfaces/Product';\nimport {switchMap} from 'rxjs/operators';\nimport {CartService} from '../shared/services/cart.service';\nimport {AlertService} from '../shared/services/alert.service';\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.scss']\n})\nexport class ProductPageComponent implements OnInit {\n\n  product$: Observable<Product>\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsService: ProductsService,\n    public cartService: CartService,\n    public alert: AlertService\n  ) {\n      \n  }\n\n    ngOnInit(): void {        \n        console.log('init ProductPageComponent');\n        this.product$ = this.route.params\n          .pipe(switchMap((params: Params) => {\n            return this.productsService.getById(params['id'])\n          }))\n  }\n\n}\n","<div *ngIf=\"product$ | async as product; else loading\">\n  <div class=\"product\">\n    <div class=\"header\">\n      <h1>{{ product.name }}</h1>\n      <button routerLink=\"/\" class=\"btn btn-link\">На главную</button>\n    </div>\n\n    <div class=\"info\">\n      <strong>{{ product.company }}</strong>\n      <small>{{ product.price | currency:'USD' }}</small>\n    </div>\n\n  </div>\n\n  <button\n          (click)=\"this.cartService.addToCart(product.id); alert.success('Продукт был добавлен в корзину')\"\n          class=\"btn btn-success\"\n  >Добавить в корзину</button>\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загрузка продукта...</p>\n</ng-template>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Alert, AlertService} from \"../../services/alert.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() delay = 3000\r\n  public text: string\r\n  public type = 'success'\r\n  aSub: Subscription\r\n\r\n  constructor(\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(){\r\n    this.aSub = this.alertService.alert$.subscribe((alert: Alert) => {\r\n      this.text = alert.text\r\n      this.type = alert.type\r\n\r\n      const timeout = setTimeout(() => {\r\n        clearTimeout(timeout)\r\n        this.text = ''\r\n      }, this.delay)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"alert-wrap\" *ngIf=\"text\">\r\n  <div\r\n    class=\"alert\"\r\n    [ngClass]=\" {\r\n     'alert-success': type === 'success',\r\n     'alert-warning': type === 'warning',\r\n     'alert-danger': type === 'danger'\r\n    }\"\r\n    >\r\n    <p>{{ text }}</p>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from '../../../admin/shared/services/auth.service';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  totalAmount: string\n  cartSub: Subscription\n\n  constructor(\n      public auth: AuthService,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    this.cartSub = this.cartService.totalAmount$.subscribe((value) => {\n      this.totalAmount = value\n    })\n\n    this.cartService.updateTotal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cartSub) {\n      this.cartSub.unsubscribe()\n    }\n  }\n\n}\n","<app-alert></app-alert>\n<nav class=\"navbar bg-primary\">\n\n\n\n  <ul *ngIf=\"auth.isAuthenticated()\">\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Angular Blog</a>\n    </li>\n    <li routerLinkActive=\"active\">\n      <a [routerLink]=\"['/cart']\">Корзина ({{ totalAmount | currency:'USD' }})</a>\n    </li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Product} from '../../interfaces/Product';\r\nimport {AlertService} from '../../../admin/shared/services/alert.service';\r\nimport {CartService} from '../../services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  @Input() product: Product\r\n\r\n  constructor(\r\n      public alert: AlertService,\r\n      public cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"cart-header\">\r\n    <h2>{{ product.name }}</h2>\r\n\r\n    <small>{{ product.price | currency:'USD' }}</small>\r\n  </div>\r\n\r\n  <div>\r\n    <small>{{ product.company }}</small>\r\n  </div>\r\n\r\n  <button\r\n    [routerLink]=\"['/product', product.id]\"\r\n    class=\"btn btn-dark\"\r\n  >Открыть</button>\r\n\r\n  <button\r\n          (click)=\"this.cartService.addToCart(product.id); this.alert.success('Продукт был добавлен в корзину')\"\r\n          class=\"btn btn-success\"\r\n  >Добавить в корзину</button>\r\n</div>\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    // console.log(this.alert$);\r\n    this.alert$.next({type: 'success', text})\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {Cart} from '../interfaces/Cart';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CartService {\r\n    public totalAmount$ = new Subject<string>();\r\n\r\n    apiUrl: string = 'https://localhost:44344/api/cart';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(productId: string): Observable<void> {\r\n        return this.http.post<void>(`${this.apiUrl}/${productId}`, null);\r\n    }\r\n\r\n    getAll(): Observable<Cart[]> {\r\n        return this.http.get<Cart[]>(`${this.apiUrl}`);\r\n    }\r\n\r\n    getById(id: string): Observable<Cart> {\r\n        return this.http.get<Cart>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    update(cart: Cart): Observable<Cart> {\r\n        return this.http.put<Cart>(`${this.apiUrl}/${cart.id}`, cart);\r\n    }\r\n\r\n    remove(id: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    updateTotal() {\r\n        this.http.get(`${this.apiUrl}/getTotal`).subscribe((response) => {\r\n            this.totalAmount$.next(response.toString())\r\n        })\r\n    }\r\n\r\n    addToCart(id: string) {\r\n        this.create(id).subscribe(() => {\r\n            this.updateTotal();\r\n        })\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../interfaces/Product';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ProductsService {\r\n    apiUrl: string = 'https://localhost:44344/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(product: Product): Observable<Product> {\r\n      return this.http.post<Product>(`${this.apiUrl}`, product);\r\n  }\r\n\r\n  getAll(): Observable<Product[]> {\r\n      return this.http.get<Product[]>(`${this.apiUrl}`);\r\n  }\r\n\r\n  getById(id: string): Observable<Product> {\r\n      return this.http.get<Product>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  update(product: Product): Observable<Product> {\r\n      return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\r\n  }\r\n\r\n  remove(id: string): Observable<void> {\r\n      return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AlertComponent} from './components/alert/alert.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    AlertComponent\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    AlertComponent\r\n  ]\r\n})\r\n\r\nexport class SharedModule {\r\n\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}