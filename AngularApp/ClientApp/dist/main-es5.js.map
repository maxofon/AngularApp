{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/create-page/create-page.component.ts","webpack:///src/app/admin/create-page/create-page.component.html","webpack:///src/app/admin/dashboard-page/dashboard-page.component.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.html","webpack:///src/app/admin/edit-page/edit-page.component.ts","webpack:///src/app/admin/edit-page/edit-page.component.html","webpack:///src/app/admin/login-page/login-page.component.ts","webpack:///src/app/admin/login-page/login-page.component.html","webpack:///src/app/admin/order-items/order-items-dashboard-page/order-items-dashboard-page.component.ts","webpack:///src/app/admin/order-items/order-items-dashboard-page/order-items-dashboard-page.component.html","webpack:///src/app/admin/orders/orders-dashboard-page/orders-dashboard-page.component.ts","webpack:///src/app/admin/orders/orders-dashboard-page/orders-dashboard-page.component.html","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.ts","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.html","webpack:///src/app/admin/shared/search.pipe.ts","webpack:///src/app/admin/shared/services/auth-admin.guard.ts","webpack:///src/app/admin/shared/services/user.service.ts","webpack:///src/app/admin/users/users-dashboard-page/users-dashboard-page.component.ts","webpack:///src/app/admin/users/users-dashboard-page/users-dashboard-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart-page/cart-page.component.ts","webpack:///src/app/cart-page/cart-page.component.html","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/order-page/order-page.component.ts","webpack:///src/app/order-page/order-page.component.html","webpack:///src/app/product-page/product-page.component.ts","webpack:///src/app/product-page/product-page.component.html","webpack:///src/app/register-page/register-page.component.ts","webpack:///src/app/register-page/register-page.component.html","webpack:///src/app/shared/components/alert/alert.component.ts","webpack:///src/app/shared/components/alert/alert.component.html","webpack:///src/app/shared/components/main-layout/main-layout.component.ts","webpack:///src/app/shared/components/main-layout/main-layout.component.html","webpack:///src/app/shared/components/product/product.component.ts","webpack:///src/app/shared/components/product/product.component.html","webpack:///src/app/shared/guards/auth.guard.ts","webpack:///src/app/shared/my.validators.ts","webpack:///src/app/shared/services/alert.service.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/cart.service.ts","webpack:///src/app/shared/services/order.service.ts","webpack:///src/app/shared/services/products.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminModule","forChild","path","component","children","redirectTo","pathMatch","canActivate","declarations","imports","providers","CreatePageComponent","alert","productsService","form","name","required","company","price","invalid","product","value","create","subscribe","reset","success","console","log","submit","selector","templateUrl","styleUrls","DashboardPageComponent","products","searchStr","pSub","getAll","unsubscribe","dSub","remove","filter","danger","EditPageComponent","route","submitted","params","pipe","getById","disabled","uSub","update","LoginPageComponent","auth","router","isAuthenticated","isAdmin","navigate","queryParams","message","email","password","minLength","user","loginAsAdmin","OrderItemsDashboardPageComponent","OrdersDashboardPageComponent","orderService","orders","loaded","getByUsername","AdminLayoutComponent","$event","event","preventDefault","logout","SearchPipe","search","trim","toLowerCase","includes","AuthAdminGuard","state","loginAgain","UserService","http","apiUrl","post","get","put","providedIn","UsersDashboardPageComponent","userService","users","u","error","routes","AppRoutingModule","forRoot","preloadingStrategy","AppComponent","AppModule","bootstrap","CartPageComponent","cartService","carts","cart","amount","quantity","c","updateTotal","HomePageComponent","products$","login","OrderPageComponent","surname","address","phone","order","ProductPageComponent","product$","addToCart","RegisterPageComponent","confirmPassword","register","AlertComponent","alertService","delay","type","aSub","alert$","text","timeout","setTimeout","clearTimeout","MainLayoutComponent","cartSub","totalAmount$","totalAmount","ProductComponent","AuthGuard","MyValidators","group","pass","confirmPass","notEqual","AlertService","next","AuthService","error$","setUser","handleError","bind","localStorage","getItem","response","expDate","Date","getTime","setItem","toString","role","clear","CartService","productId","length","OrderService","username","ProductsService","SharedModule","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { CreatePageComponent } from './create-page/create-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {SearchPipe} from './shared/search.pipe';\r\nimport {AuthAdminGuard} from './shared/services/auth-admin.guard';\r\nimport {OrdersDashboardPageComponent} from './orders/orders-dashboard-page/orders-dashboard-page.component';\r\nimport {UsersDashboardPageComponent} from './users/users-dashboard-page/users-dashboard-page.component';\r\nimport {OrderItemsDashboardPageComponent} from './order-items/order-items-dashboard-page/order-items-dashboard-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLayoutComponent,\r\n    LoginPageComponent,\r\n    DashboardPageComponent,\r\n    CreatePageComponent,\r\n    EditPageComponent,\r\n    OrdersDashboardPageComponent,\r\n    OrderItemsDashboardPageComponent,\r\n    UsersDashboardPageComponent,\r\n    SearchPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'admin', component: AdminLayoutComponent, children: [\r\n          {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n          {path: 'login', component: LoginPageComponent},\r\n          {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthAdminGuard]},\r\n          {path: 'create', component: CreatePageComponent, canActivate: [AuthAdminGuard]},\r\n          {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthAdminGuard]},\r\n          {path: 'orders/:userName', component: OrdersDashboardPageComponent, canActivate: [AuthAdminGuard]},\r\n          // {path: 'order-items/dashboard/:id', component: OrderItemsDashboardPageComponent, canActivate: [AuthAdminGuard]},\r\n          {path: 'users/dashboard', component: UsersDashboardPageComponent, canActivate: [AuthAdminGuard]},\r\n        ]\r\n      }\r\n    ]),\r\n    FormsModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthAdminGuard]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Product} from \"../../shared/interfaces/Product\";\r\nimport {ProductsService} from \"../../shared/services/products.service\";\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      company: new FormControl(null, Validators.required),\r\n      price: new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const product: Product = {\r\n      name: this.form.value.name,\r\n      company: this.form.value.company,\r\n      price: this.form.value.price\r\n    }\r\n\r\n    this.productsService.create(product).subscribe(() => {\r\n      this.form.reset()\r\n      this.alert.success('Создан новый пост')\r\n    })\r\n\r\n    console.log('new product', product);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <h1>Создание нового продукта</h1>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"name\">Название продукта:</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    <div\r\n      *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('name').errors.required\"\r\n      >Введите название продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('company').touched && form.get('company').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"company\">Название компании:</label>\r\n    <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    <div\r\n      *ngIf=\"form.get('company').touched && form.get('company').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('company').errors.required\"\r\n      >Введите название компании</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n          [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n          class=\"form-control\"\r\n  >\r\n    <label for=\"price\">Цена продукта:</label>\r\n    <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n    <div\r\n            *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n            class=\"validation\"\r\n    >\r\n      <small\r\n              *ngIf=\"form.get('price').errors.required\"\r\n      >Введите цену продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-block btn-dark\"\r\n    [disabled]=\"form.invalid\"\r\n    >Создать продукт</button>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.scss']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  products: Product[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  searchStr = '';\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.productsService.getAll().subscribe(products => {\r\n      this.products = products\r\n      // console.log('Products: ',this.products);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.productsService.remove(id).subscribe(() => {\r\n      this.products = this.products.filter(product => product.id !== id);\r\n      this.alert.danger('Продукт был удален');\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"products.length; else loading\">\r\n  <div class=\"form-control\">\r\n    <input type=\"text\" placeholder=\"Найти продукт по названию...\" [(ngModel)]=\"searchStr\">\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Название</th>\r\n      <th>Компания</th>\r\n      <th>Цена</th>\r\n      <th>Действие</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let product of products | searchProducts:searchStr ; let idx = index\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ product.name }}</td>\r\n      <td>{{ product.company }}</td>\r\n      <td>{{ product.price | currency:'USD' }}</td>\r\n      <td>\r\n        <button\r\n          class=\"btn btn-link open\"\r\n          [routerLink]=\"['/admin','product', product.id, 'edit']\"\r\n        >Открыть</button>\r\n\r\n        <a (click)=\"remove(product.id)\">Удалить</a>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProductsService} from '../../shared/services/products.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Product} from '../../shared/interfaces/Product';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-page',\r\n  templateUrl: './edit-page.component.html',\r\n  styleUrls: ['./edit-page.component.scss']\r\n})\r\nexport class EditPageComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  product: Product\r\n  submitted: boolean = false\r\n  uSub: Subscription\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(switchMap((params: Params) => {\r\n        return this.productsService.getById(params['id'])\r\n      }))\r\n      .subscribe((product: Product) => {\r\n        this.product = product\r\n        this.form = new FormGroup({\r\n          name: new FormControl(product.name, Validators.required),\r\n          company: new FormControl({value: product.company, disabled: true}, Validators.required),\r\n          price: new FormControl(product.price, Validators.required)\r\n        })\r\n      })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    this.uSub = this.productsService.update({\r\n      ...this.product,\r\n      name: this.form.value.name,\r\n      price: this.form.value.price\r\n    }).subscribe(() => {\r\n      this.submitted = false\r\n      this.alert.success(`Продукт ${this.product.name} был обновлен`)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.uSub) {\r\n      this.uSub.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"form; else loading\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n      class=\"form-control\"\r\n    >\r\n      <label for=\"name\">Название продукта:</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n        class=\"validation\"\r\n      >\r\n        <small\r\n          *ngIf=\"form.get('name').errors.required\"\r\n        >Введите название продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-control\">\r\n      <label for=\"company\">Название компании:</label>\r\n      <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    </div>\r\n\r\n    <div\r\n            [ngClass]=\"{invalid: form.get('price').touched && form.get('price').invalid}\"\r\n            class=\"form-control\"\r\n    >\r\n      <label for=\"price\">Цена продукта:</label>\r\n      <input id=\"price\" type=\"number\" formControlName=\"price\">\r\n      <div\r\n              *ngIf=\"form.get('price').touched && form.get('price').invalid\"\r\n              class=\"validation\"\r\n      >\r\n        <small\r\n                *ngIf=\"form.get('price').errors.required\"\r\n        >Введите цену продукта</small>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"form.invalid || submitted\"\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n    >Обновить</button>\r\n  </form>\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../../shared/services/auth.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {User} from '../../shared/interfaces/User';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup\r\n  submitted: boolean =  false;\r\n  message: string\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.auth.isAuthenticated() && this.auth.isAdmin()) {\r\n      this.router.navigate(['/admin','dashboard'])\r\n    }\r\n\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['loginAgain']) {\r\n        this.message = 'Пожалуйста, введите данные.';\r\n      } else if (params['authFailed']) {\r\n        this.message = 'Сессия истекла. Введите данные заново.';\r\n      }\r\n    })\r\n\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(5)\r\n      ])\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    const user: User = {\r\n      email: this.form.value.email,\r\n      password: this.form.value.password\r\n    }\r\n\r\n    this.auth.loginAsAdmin(user).subscribe(() => {\r\n      this.form.reset;\r\n      this.router.navigate(['/admin','dashboard'])\r\n      this.submitted = false;\r\n    }, () => {\r\n      this.submitted = false\r\n    });\r\n\r\n    // this.form.reset;\r\n    // this.router.navigate(['/admin','dashboard'])\r\n    // this.submitted = false;\r\n\r\n  }\r\n}\r\n","<form class=\"card\" [formGroup]=\"form\">\r\n  <h2>Войти в панель администратора</h2>\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div class=\"alert alert-info\" *ngIf=\"message\">\r\n    {{ message }}\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    <div\r\n      *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('email').errors.required\"\r\n      >Нужно ввести email</small>\r\n      <small\r\n        *ngIf=\"form.get('email').errors.email\"\r\n      >Email должен быть email</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"password\">Password:</label>\r\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    <div\r\n      *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n      class=\"validation\">\r\n      <small\r\n        *ngIf=\"form.get('password').errors.required\"\r\n      >Нужно ввести пароль</small>\r\n\r\n      <small\r\n        *ngIf=\"form.get('password').errors.minlength\"\r\n      >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\r\n        Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    [disabled]=\"form.invalid || submitted\"\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submit()\"\r\n  >Войти</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'order-items-dashboard-page',\n  templateUrl: './order-items-dashboard-page.component.html',\n  styleUrls: ['./order-items-dashboard-page.component.scss']\n})\nexport class OrderItemsDashboardPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>order-items-dashboard-page works!</p>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {AlertService} from '../../../shared/services/alert.service';\nimport {Order} from '../../../shared/interfaces/Order';\nimport {OrderService} from '../../../shared/services/order.service';\nimport {switchMap} from 'rxjs/operators';\nimport {ActivatedRoute, Params, Route} from '@angular/router';\n\n@Component({\n  selector: 'orders-dashboard-page',\n  templateUrl: './orders-dashboard-page.component.html',\n  styleUrls: ['./orders-dashboard-page.component.scss']\n})\nexport class OrdersDashboardPageComponent implements OnInit, OnDestroy {\n  orders: Order[] = []\n  pSub: Subscription\n  dSub: Subscription\n  loaded: boolean = false\n\n  constructor(\n      private alert: AlertService,\n      private orderService: OrderService,\n      private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.pSub = this.route.params\n                .pipe(switchMap((params: Params) => {\n                  return this.orderService.getByUsername(params['userName'])\n                }))\n                .subscribe((orders: Order[]) => {\n                  this.orders = orders\n                  this.loaded = true\n                })\n  }\n\n  remove(id: string): void {\n    this.dSub = this.orderService.remove(id).subscribe(() => {\n      this.orders = this.orders.filter(product => product.id !== id);\n      this.alert.danger('Заказ был удален');\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.pSub.unsubscribe();\n    if (this.dSub) {\n      this.dSub.unsubscribe();\n    }\n  }\n}\n","<div *ngIf=\"orders.length; else loading\">\n<!--    <div class=\"form-control\">-->\n<!--        <input type=\"text\" placeholder=\"Найти продукт по названию...\" [(ngModel)]=\"searchStr\">-->\n<!--    </div>-->\n\n    <table>\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Имя</th>\n            <th>Фамилия</th>\n            <th>Адрес</th>\n            <th>Телефон</th>\n            <th>Email</th>\n            <th>Сумма заказа</th>\n            <th>Дата заказа</th>\n            <th>Действие</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let order of orders  ; let idx = index\">\n            <td>{{ idx + 1 }}</td>\n            <td>{{ order.name }}</td>\n            <td>{{ order.surname }}</td>\n            <td>{{ order.address }}</td>\n            <td>{{ order.phone }}</td>\n            <td>{{ order.email }}</td>\n            <td>{{ order.amount }}</td>\n            <td>{{ order.orderTime }}</td>\n            <td>\n                <button\n                        class=\"btn btn-link open\"\n                        [routerLink]=\"['/admin','order-items', 'dashboard', order.id]\"\n                >Открыть детали</button>\n\n                <a (click)=\"remove(order.id)\">Удалить заказ</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #loading>\n    <div *ngIf=\"loaded; else inProcess\" class=\"btn btn-block\">\n        <p>Заказов нет</p>\n    </div>\n    <ng-template #inProcess>\n        <p class=\"text-center\">Идет загрузка...</p>\n    </ng-template>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../../../shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout($event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.auth.logout();\r\n    this.router.navigate(['/admin','login'])\r\n  }\r\n}\r\n","<app-alert [delay]=\"3000\"></app-alert>\r\n\r\n<nav class=\"navbar bg-primary\">\r\n  <h1>\r\n    <a routerLink=\"/\">Angular Blog</a>\r\n  </h1>\r\n\r\n  <ul *ngIf=\"auth.isAuthenticated()\">\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','dashboard']\">Главная админки</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','users','dashboard']\">Пользователи</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','create']\">Создать товар</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Product} from '../../shared/interfaces/Product';\r\n\r\n@Pipe({\r\n  name: 'searchProducts'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform{\r\n  transform(products: Product[], search = ''): Product[] {\r\n    if (!search.trim()) {\r\n      return products\r\n    }\r\n\r\n    return products.filter(product => {\r\n      return product.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"../../../shared/services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthAdminGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated() && this.auth.isAdmin()) {\r\n      console.log('You are admin');\r\n      return true\r\n    } else {\r\n      // this.auth.logout()\r\n      this.router.navigate(['/admin','login'], {\r\n        queryParams: {\r\n          loginAgain: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../../shared/interfaces/User';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService {\r\n    apiUrl: string = 'https://localhost:44344/api/users';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(user: User): Observable<void> {\r\n        return this.http.post<void>(`${this.apiUrl}`, user);\r\n    }\r\n\r\n    getAll(): Observable<User[]> {\r\n        return this.http.get<User[]>(`${this.apiUrl}`);\r\n    }\r\n    \r\n    getById(id: string): Observable<User> {\r\n        return this.http.get<User>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    update(user: User): Observable<User> {\r\n        return this.http.put<User>(`${this.apiUrl}/${user.id}`, user);\r\n    }\r\n\r\n    remove(id: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {AlertService} from '../../../shared/services/alert.service';\nimport {User} from '../../../shared/interfaces/User';\nimport {UserService} from '../../shared/services/user.service';\n\n@Component({\n  selector: 'users-dashboard-page',\n  templateUrl: './users-dashboard-page.component.html',\n  styleUrls: ['./users-dashboard-page.component.scss']\n})\nexport class UsersDashboardPageComponent implements OnInit {\n\n  users: User[] = []\n  pSub: Subscription\n  dSub: Subscription\n\n  constructor(\n      private alert: AlertService,\n      private userService: UserService\n  ) { }\n\n  ngOnInit(): void {\n    this.pSub = this.userService.getAll().subscribe(users => {\n      this.users = users\n    })\n\n  }\n\n  ngOnDestroy(): void {\n    this.pSub.unsubscribe();\n    if (this.dSub) {\n      this.dSub.unsubscribe();\n    }\n\n  }\n\n  remove(user: User): void {\n    this.dSub = this.userService.remove(user.id).subscribe(() => {\n      this.users = this.users.filter(u => u.id !== user.id);\n      this.alert.danger(`Пользователь ${user.email} был удален`);\n    },(error) => {\n      this.alert.danger(`Нельзя удалить пользователя ${user.email}`)\n    })\n  }\n\n}\n","<div *ngIf=\"users.length; else loading\">\n<!--    <div class=\"form-control\">-->\n<!--        <input type=\"text\" placeholder=\"Найти продукт по названию...\" [(ngModel)]=\"searchStr\">-->\n<!--    </div>-->\n\n    <table>\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Имя</th>\n            <th>Email</th>\n            <th>Действие</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let user of users ; let idx = index\">\n            <td>{{ idx + 1 }}</td>\n            <td>{{ user.name }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n                <button\n                        class=\"btn btn-success open\"\n                        [routerLink]=\"['/admin','orders', user.name]\"\n                >Открыть заказы</button>\n                <a (click)=\"remove(user)\">Удалить пользователя</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #loading>\n    <p class=\"text-center\">Идет загрузка...</p>\n</ng-template>\n","import { NgModule } from '@angular/core';\r\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\r\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {ProductPageComponent} from './product-page/product-page.component';\r\nimport {CartPageComponent} from './cart-page/cart-page.component';\r\nimport {LoginPageComponent} from './login-page/login-page.component';\r\nimport {RegisterPageComponent} from './register-page/register-page.component';\r\nimport {OrderPageComponent} from './order-page/order-page.component';\r\nimport {AuthGuard} from './shared/guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainLayoutComponent, children: [\r\n      {path: '', redirectTo: '/', pathMatch: 'full'},\r\n      {path: '', component: HomePageComponent},\r\n      {path: 'product/:id', component: ProductPageComponent},\r\n      {path: 'cart', component: CartPageComponent, canActivate: [AuthGuard]},\r\n      {path: 'login', component: LoginPageComponent},\r\n      {path: 'register', component: RegisterPageComponent},\r\n      {path: 'order', component: OrderPageComponent}\r\n    ]\r\n  },\r\n  //{\r\n  //  // path: 'admin', loadChildren: './admin/admin.module#AdminModule'\r\n  //  path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n  //}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n} ","<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ProductPageComponent } from './product-page/product-page.component';\r\nimport { ProductComponent } from './shared/components/product/product.component';\r\nimport {AdminModule} from './admin/admin.module';\r\nimport { CartPageComponent } from './cart-page/cart-page.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component';\r\nimport { OrderPageComponent } from './order-page/order-page.component';\r\nimport {AuthGuard} from './shared/guards/auth.guard';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        SharedModule,\r\n        AdminModule,\r\n        ReactiveFormsModule\r\n    ],      \r\n    declarations: [\r\n        AppComponent,\r\n        MainLayoutComponent,\r\n        HomePageComponent,\r\n        ProductPageComponent,\r\n        ProductComponent,\r\n        CartPageComponent,\r\n        LoginPageComponent,\r\n        RegisterPageComponent,\r\n        OrderPageComponent\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    providers: [AuthGuard]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Cart} from '../shared/interfaces/Cart';\r\nimport {Subscription} from 'rxjs';\r\nimport {CartService} from '../shared/services/cart.service';\r\nimport {AlertService} from '../shared/services/alert.service';\r\nimport {Product} from '../shared/interfaces/Product';\r\n\r\n@Component({\r\n  selector: 'app-cart-page',\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrls: ['./cart-page.component.scss']\r\n})\r\nexport class CartPageComponent implements OnInit, OnDestroy {\r\n  carts: Cart[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  loaded: boolean\r\n\r\n  constructor(\r\n      private alert: AlertService,\r\n      private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.cartService.getAll().subscribe(carts => {\r\n      this.carts = carts\r\n      this.loaded = true;\r\n    })\r\n  }\r\n\r\n  remove(cart: Cart): void {\r\n    let amount = cart.price * cart.quantity;\r\n\r\n    this.dSub = this.cartService.remove(cart.id).subscribe(() => {\r\n      this.carts = this.carts.filter(c => c.id !== cart.id);\r\n      this.cartService.updateTotal();\r\n      this.loaded = true;\r\n      this.alert.danger(`Продукт на сумму ${amount} был удален из корзины`);\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"carts.length; else loading\">\n    <button class=\"btn btn-sm\">\n        <a [routerLink]=\"['/order']\">Оформить заказ</a>\n    </button>\n\n    <table>\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th>Количество</th>\n            <th>Цена</th>\n            <th>Действие</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let cart of carts ; let idx = index\">\n            <td>{{ idx + 1 }}</td>\n            <td>{{ cart.product.name }}</td>\n            <td>{{ cart.quantity }}</td>\n            <td>{{ cart.price | currency:'USD'}}</td>\n            <td>\n                <a (click)=\"remove(cart)\">Удалить</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #loading>\n    <div *ngIf=\"loaded; else inProcess\">\n        <p>Корзина пуста</p>\n    </div>\n    <ng-template #inProcess>\n        <p class=\"text-center\">Идет загрузка...</p>\n    </ng-template>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Observable} from 'rxjs';\nimport {Product} from '../shared/interfaces/Product';\nimport {AuthService} from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n    products$: Observable<Product[]>;\n    //products: Product[]\n\n  constructor(\n    private productsService: ProductsService,\n    private auth: AuthService\n  ) { }\n\n    ngOnInit(): void {\n        //this.products = [];\n      this.products$ = this.productsService.getAll()\n  }\n\n}\n","<div\r\n  *ngIf=\"products$ | async as products; else loading\"\r\n  class=\"products\"\r\n>\r\n  <app-product\r\n    *ngFor=\"let product of products\"\r\n    [product]=\"product\"\r\n    [showAddCart]=\"auth.isAuthenticated()\"\r\n  ></app-product>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Загружаю продукты...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {User} from '../shared/interfaces/User';\nimport {CartService} from '../shared/services/cart.service';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  form: FormGroup\n  submitted: boolean =  false\n  message: string\n\n  constructor(\n      public auth: AuthService,\n      private router: Router,\n      private route: ActivatedRoute,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe((params: Params) => {\n    //   if (params['loginAgain']) {\n    //     this.message = 'Пожалуйста, введите данные.';\n    //   } else if (params['authFailed']) {\n    //     this.message = 'Сессия истекла. Введите данные заново.';\n    //   }\n    // })\n\n    this.form = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(5)\n      ])\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true;\n\n    const user: User = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    this.auth.login(user).subscribe(() => {\n      this.form.reset;\n      this.router.navigate(['/'])\n      this.submitted = false;\n      this.cartService.updateTotal();\n    }, () => {\n      this.submitted = false\n    });\n  }\n}\n","<form class=\"card\" [formGroup]=\"form\">\n    <h2>Войти</h2>\n\n    <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\n        {{ error }}\n    </div>\n\n    <div class=\"alert alert-info\" *ngIf=\"message\">\n        {{ message }}\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div\n                *ngIf=\"form.get('email').touched && form.get('email').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('email').errors.required\"\n            >Нужно ввести email</small>\n            <small\n                    *ngIf=\"form.get('email').errors.email\"\n            >Email должен быть email</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\">\n        <div\n                *ngIf=\"form.get('password').touched && form.get('password').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('password').errors.required\"\n            >Нужно ввести пароль</small>\n\n            <small\n                    *ngIf=\"form.get('password').errors.minlength\"\n            >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\n                Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\n        </div>\n    </div>\n\n\n    <button\n            [disabled]=\"form.invalid || submitted\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            (click)=\"submit()\"\n    >Войти</button>\n\n    <a [routerLink]=\"['/register']\">Зарегистрироваться</a>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrderService} from '../shared/services/order.service';\nimport {Order} from '../shared/interfaces/Order';\nimport {CartService} from '../shared/services/cart.service';\nimport {Alert, AlertService} from '../shared/services/alert.service';\n\n@Component({\n  selector: 'order-page',\n  templateUrl: './order-page.component.html',\n  styleUrls: ['./order-page.component.scss']\n})\nexport class OrderPageComponent implements OnInit {\n  form: FormGroup\n  submitted: boolean =  false\n\n  constructor(\n      public auth: AuthService,\n      public alert: AlertService,\n      private router: Router,\n      private route: ActivatedRoute,\n      private orderService: OrderService,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl(null, [\n        Validators.required\n      ]),\n      surname: new FormControl(null, [\n        Validators.required\n      ]),\n      address: new FormControl(null, [\n        Validators.required\n      ]),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      phone: new FormControl(null, [\n        Validators.required\n      ]),\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true;\n\n    const order: Order = {\n      name: this.form.value.name,\n      surname: this.form.value.surname,\n      email: this.form.value.email,\n      address: this.form.value.address,\n      phone: this.form.value.phone\n    }\n\n    this.orderService.create(order).subscribe(() => {\n      this.form.reset;\n      this.router.navigate(['/'])\n      this.submitted = false;\n      this.cartService.updateTotal();\n      this.alert.success('Заказ успешно оформлен.')\n    }, () => {\n      this.submitted = false\n    });\n  }\n}\n","<form class=\"card\" [formGroup]=\"form\">\n    <div class=\"btn btn-block\">\n        <h3>Введите ваши данные</h3>\n    </div>\n\n<!--    Имя-->\n    <div\n            [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"name\">Ваше имя:</label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\">\n        <div\n                *ngIf=\"form.get('name').touched && form.get('name').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('name').errors.required\"\n            >Нужно ввести имя</small>\n        </div>\n    </div>\n\n<!--    Фамилия-->\n    <div\n            [ngClass]=\"{invalid: form.get('surname').touched && form.get('surname').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"surname\">Ваша фамилия:</label>\n        <input id=\"surname\" type=\"text\" formControlName=\"surname\">\n        <div\n                *ngIf=\"form.get('surname').touched && form.get('surname').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('surname').errors.required\"\n            >Нужно ввести фамилию</small>\n        </div>\n    </div>\n\n<!--    Email-->\n    <div\n            [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"email\">Ваш Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div\n                *ngIf=\"form.get('email').touched && form.get('email').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('email').errors.required\"\n            >Нужно ввести email</small>\n            <small\n                    *ngIf=\"form.get('email').errors.email\"\n            >Email должен быть email</small>\n        </div>\n    </div>\n\n<!--    Address-->\n    <div\n            [ngClass]=\"{invalid: form.get('address').touched && form.get('address').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"address\">Ваш адрес:</label>\n        <input id=\"address\" type=\"text\" formControlName=\"address\">\n        <div\n                *ngIf=\"form.get('address').touched && form.get('address').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('address').errors.required\"\n            >Нужно ввести адрес</small>\n        </div>\n    </div>\n\n<!--    Phone-->\n    <div\n            [ngClass]=\"{invalid: form.get('phone').touched && form.get('phone').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"phone\">Ваш телефон:</label>\n        <input id=\"phone\" type=\"text\" formControlName=\"phone\">\n        <div\n                *ngIf=\"form.get('phone').touched && form.get('phone').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('phone').errors.required\"\n            >Нужно ввести телефон</small>\n        </div>\n    </div>\n\n\n    <button\n            [disabled]=\"form.invalid || submitted\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            (click)=\"submit()\"\n    >Оформить</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ProductsService} from '../shared/services/products.service';\nimport {Product} from '../shared/interfaces/Product';\nimport {switchMap} from 'rxjs/operators';\nimport {CartService} from '../shared/services/cart.service';\nimport {AlertService} from '../shared/services/alert.service';\nimport {AuthService} from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.scss']\n})\nexport class ProductPageComponent implements OnInit {\n  product$: Observable<Product>\n\n  constructor(\n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private productsService: ProductsService,\n    private cartService: CartService,\n    private alert: AlertService\n  ) {\n      \n  }\n\n    ngOnInit(): void {        \n        console.log('init ProductPageComponent');\n        this.product$ = this.route.params\n          .pipe(switchMap((params: Params) => {\n            return this.productsService.getById(params['id'])\n          }))\n  }\n\n    addToCart(product: Product) {\n        this.cartService.addToCart(product.id);\n        this.alert.success(`Продукт ${product.name} был добавлен в корзину`)\n    }\n}\n","<div *ngIf=\"product$ | async as product; else loading\">\n  <div class=\"product\">\n    <div class=\"header\">\n      <h1>{{ product.name }}</h1>\n      <button routerLink=\"/\" class=\"btn btn-link\">На главную</button>\n    </div>\n\n    <div class=\"info\">\n      <strong>{{ product.company }}</strong>\n      <small>{{ product.price | currency:'USD' }}</small>\n    </div>\n\n  </div>\n\n  <button *ngIf=\"this.auth.isAuthenticated()\"\n          (click)=\"addToCart(product)\"\n          class=\"btn btn-success\"\n  >Добавить в корзину</button>\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Загрузка продукта...</p>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MyValidators} from '../shared/my.validators';\nimport {User} from '../shared/interfaces/User';\nimport {CartService} from '../shared/services/cart.service';\n\n@Component({\n  selector: 'register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  form: FormGroup\n  submitted: boolean =  false;\n  message: string\n\n  constructor(\n      public auth: AuthService,\n      private router: Router,\n      private route: ActivatedRoute,\n      private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe((params: Params) => {\n    //   if (params['loginAgain']) {\n    //     this.message = 'Пожалуйста, введите данные.';\n    //   } else if (params['authFailed']) {\n    //     this.message = 'Сессия истекла. Введите данные заново.';\n    //   }\n    // })\n\n    this.form = new FormGroup({\n      name: new FormControl(null, [\n        Validators.required\n      ]),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(5)\n      ]),\n      confirmPassword: new FormControl(null, [\n        Validators.required\n      ])\n    },[MyValidators.confirmPassword])\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true;\n\n    const user: User = {\n      name: this.form.value.name,\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    this.auth.register(user).subscribe(() => {\n      this.form.reset;\n      this.router.navigate(['/'])\n      this.submitted = false;\n      this.cartService.updateTotal();\n    }, () => {\n      this.submitted = false\n    });\n  }\n\n}\n","<form class=\"card\" [formGroup]=\"form\">\n    <h2>Регистрация</h2>\n\n    <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\n        {{ error }}\n    </div>\n\n    <div class=\"alert alert-info\" *ngIf=\"message\">\n        {{ message }}\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"name\">Введите имя:</label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\">\n        <div\n                *ngIf=\"form.get('name').touched && form.get('name').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('name').errors.required\"\n            >Нужно ввести имя</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"email\">Введите Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div\n                *ngIf=\"form.get('email').touched && form.get('email').invalid\"\n                class=\"validation\"\n        >\n            <small\n                    *ngIf=\"form.get('email').errors.required\"\n            >Нужно ввести email</small>\n            <small\n                    *ngIf=\"form.get('email').errors.email\"\n            >Email должен быть email</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\">\n        <div\n                *ngIf=\"form.get('password').touched && form.get('password').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('password').errors.required\"\n            >Нужно ввести пароль</small>\n\n            <small\n                    *ngIf=\"form.get('password').errors.minlength\"\n            >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\n                Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\n        </div>\n    </div>\n\n    <div\n            [ngClass]=\"{invalid: form.get('confirmPassword').touched && form.get('confirmPassword').invalid}\"\n            class=\"form-control\"\n    >\n        <label for=\"confirmPassword\">Confirm password:</label>\n        <input id=\"confirmPassword\" type=\"password\" formControlName=\"confirmPassword\">\n        <div\n                *ngIf=\"form.get('confirmPassword').touched && form.get('confirmPassword').invalid\"\n                class=\"validation\">\n            <small\n                    *ngIf=\"form.get('confirmPassword').errors.required\"\n            >Нужно подтвердить пароль</small>\n        </div>\n\n        <small\n                *ngIf=\"form.get('confirmPassword').touched && form.errors && form.errors.notEqual\"\n        >Пароли должны совпадать</small>\n\n    </div>\n\n    <button\n            [disabled]=\"form.invalid || submitted\"\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            (click)=\"submit()\"\n    >Зарегистрироваться</button>\n\n    <a [routerLink]=\"['/login']\">Войти</a>\n</form>\n\n\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Alert, AlertService} from \"../../services/alert.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() delay = 3000;\r\n  public text: string\r\n  public type = 'success'\r\n  aSub: Subscription\r\n\r\n  constructor(\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(){\r\n    this.aSub = this.alertService.alert$.subscribe((alert: Alert) => {\r\n      this.text = alert.text\r\n      this.type = alert.type\r\n\r\n      const timeout = setTimeout(() => {\r\n        clearTimeout(timeout)\r\n        this.text = ''\r\n      }, this.delay)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"text\" class=\"alert-wrap\">\r\n  <div\r\n    class=\"alert\"\r\n    [ngClass]=\" {\r\n     'alert-success': type === 'success',\r\n     'alert-warning': type === 'warning',\r\n     'alert-danger': type === 'danger'\r\n    }\"\r\n    >\r\n    <p>{{ text }}</p>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  totalAmount: string\n  cartSub: Subscription\n\n  constructor(\n      public auth: AuthService,\n      private cartService: CartService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.cartSub = this.cartService.totalAmount$.subscribe((value) => {\n      this.totalAmount = value\n    })\n\n    this.cartService.updateTotal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cartSub) {\n      this.cartSub.unsubscribe()\n    }\n  }\n\n  logout($event: MouseEvent) {\n    event.preventDefault();\n    this.auth.logout();\n    this.router.navigate(['/login'])\n  }\n}\n","<app-alert [delay]=\"1000\"></app-alert>\n<nav class=\"navbar bg-primary\">\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Angular Blog</a>\n    </li>\n    <li routerLinkActive=\"active\" *ngIf=\"auth.isAuthenticated()\">\n      <a [routerLink]=\"['/cart']\">Корзина ({{ totalAmount | currency:'USD' }})</a>\n    </li>\n\n    <li *ngIf=\"auth.isAuthenticated(); else signIn\" routerLinkActive=\"active\">\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\n    </li>\n    <ng-template #signIn>\n      <li routerLinkActive=\"active\">\n        <a [routerLink]=\"['/login']\">Войти</a>\n      </li>\n    </ng-template>\n  </ul>\n\n  <div *ngIf=\"auth.user as userName\">\n    <h5>Привет, {{ userName }}</h5>\n  </div>\n  <div>\n    <a [routerLink]=\"['/admin']\">Админка</a>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Product} from '../../interfaces/Product';\r\nimport {CartService} from '../../services/cart.service';\r\nimport {AlertService} from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  @Input() product: Product\r\n  @Input() showAddCart: boolean\r\n\r\n  constructor(\r\n      private alert: AlertService,\r\n      private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addToCart(product: Product) {\r\n    this.cartService.addToCart(product.id);\r\n    this.alert.success(`Продукт ${product.name} был добавлен в корзину`)\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"cart-header\">\r\n    <h2>{{ product.name }}</h2>\r\n\r\n    <small>{{ product.price | currency:'USD' }}</small>\r\n  </div>\r\n\r\n  <div>\r\n    <small>{{ product.company }}</small>\r\n  </div>\r\n\r\n  <button\r\n    [routerLink]=\"['/product', product.id]\"\r\n    class=\"btn btn-dark\"\r\n  >Открыть</button>\r\n\r\n  <button *ngIf=\"showAddCart\"\r\n          (click)=\"addToCart(product)\"\r\n          class=\"btn btn-success\"\r\n  >Добавить в корзину</button>\r\n</div>\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated()) {\r\n      console.log('ping');\r\n      return true\r\n    } else {\r\n      // this.auth.logout()\r\n      this.router.navigate(['/login'])\r\n    }\r\n  }\r\n\r\n}\r\n","import {FormGroup} from '@angular/forms';\r\n\r\nexport class MyValidators {\r\n    static confirmPassword(group: FormGroup) {\r\n        let pass = group.get('password').value;\r\n        let confirmPass = group.get('confirmPassword').value;\r\n\r\n        return pass === confirmPass ? null : { notEqual: true }\r\n    }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    // console.log(this.alert$);\r\n    this.alert$.next({type: 'success', text})\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, Subject, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {User} from '../interfaces/User';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  public error$: Subject<string> = new Subject<string>();\r\n  apiUrl: string = 'api/account';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get user(): string {\r\n    const expDate = new Date(localStorage.getItem('expires'));\r\n    if (new Date > expDate) {\r\n     this.logout();\r\n     return null;\r\n    }\r\n\r\n    return localStorage.getItem('user-name')\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    // user.returnSecureToken = true;\r\n    return this.http.post(`${this.apiUrl}/login`, user)\r\n     .pipe(\r\n       // tap(this.setToken),\r\n       tap(this.setUser),\r\n       catchError(this.handleError.bind(this))\r\n     )\r\n  }\r\n\r\n  loginAsAdmin(user: User): Observable<any> {\r\n    // user.returnSecureToken = true;\r\n    return this.http.post(`${this.apiUrl}/loginAdmin`, user)\r\n        .pipe(\r\n            // tap(this.setToken),\r\n            tap(this.setUser),\r\n            catchError(this.handleError.bind(this))\r\n        )\r\n  }\r\n\r\n  logout() {\r\n    this.http.get(`${this.apiUrl}/logout`);\r\n    this.setUser(null);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.user;\r\n    // return true;\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return !!localStorage.getItem('admin');\r\n    // return true;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    console.log(error)\r\n    this.error$.next(error.error)\r\n    // console.log('this.error$',this.error$)\r\n    return throwError(error)\r\n  }\r\n\r\n  private setUser(response: User | null) {\r\n    // console.log(response);\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + 60000); //1 мин\r\n      localStorage.setItem('expires', expDate.toString())\r\n      localStorage.setItem('user-name', response.name)\r\n      localStorage.setItem('user-email', response.email)\r\n      if (response.role.name == 'admin') {\r\n        localStorage.setItem('admin', 'true')\r\n      }\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n  }\r\n\r\n  register(user: User): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/register`, user)\r\n        .pipe(\r\n            // tap(this.setToken),\r\n            tap(this.setUser),\r\n            catchError(this.handleError.bind(this))\r\n        )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {Cart} from '../interfaces/Cart';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CartService {\r\n    public totalAmount$ = new Subject<string>();\r\n\r\n    apiUrl: string = 'https://localhost:44344/api/cart';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(productId: string): Observable<void> {\r\n        return this.http.post<void>(`${this.apiUrl}/${productId}`, null);\r\n    }\r\n\r\n    getAll(): Observable<Cart[]> {\r\n        return this.http.get<Cart[]>(`${this.apiUrl}`);\r\n    }\r\n\r\n    getById(id: string): Observable<Cart> {\r\n        return this.http.get<Cart>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    update(cart: Cart): Observable<Cart> {\r\n        return this.http.put<Cart>(`${this.apiUrl}/${cart.id}`, cart);\r\n    }\r\n\r\n    remove(id: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    updateTotal() {\r\n        this.http.get(`${this.apiUrl}/getTotal`).subscribe((response) => {\r\n            this.totalAmount$.next(response.toString())\r\n        })\r\n    }\r\n\r\n    addToCart(id: string) {\r\n        this.create(id).subscribe(() => {\r\n            this.updateTotal();\r\n        })\r\n    }\r\n\r\n    isCartNotEmpty(): boolean {\r\n        this.http.get<Cart[]>(`${this.apiUrl}`).subscribe((carts) => {\r\n            console.log(carts.length)\r\n            return (carts.length > 0)\r\n        })\r\n        console.log('asdf')\r\n        return false\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../interfaces/Order';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OrderService {\r\n    apiUrl: string = 'https://localhost:44344/api/orders';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(order: Order): Observable<void> {\r\n        return this.http.post<void>(`${this.apiUrl}`, order);\r\n    }\r\n\r\n    getAll(): Observable<Order[]> {\r\n        return this.http.get<Order[]>(`${this.apiUrl}`);\r\n    }\r\n\r\n    getByUsername(username: string): Observable<Order[]> {\r\n        return this.http.get<Order[]>(`${this.apiUrl}/${username}`);\r\n    }\r\n\r\n    getById(id: string): Observable<Order> {\r\n        return this.http.get<Order>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    update(order: Order): Observable<Order> {\r\n        return this.http.put<Order>(`${this.apiUrl}/${order.id}`, order);\r\n    }\r\n\r\n    remove(id: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../interfaces/Product';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ProductsService {\r\n    apiUrl: string = 'https://localhost:44344/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(product: Product): Observable<Product> {\r\n      return this.http.post<Product>(`${this.apiUrl}`, product);\r\n  }\r\n\r\n  getAll(): Observable<Product[]> {\r\n      return this.http.get<Product[]>(`${this.apiUrl}`);\r\n  }\r\n\r\n  getById(id: string): Observable<Product> {\r\n      return this.http.get<Product>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  update(product: Product): Observable<Product> {\r\n      return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\r\n  }\r\n\r\n  remove(id: string): Observable<void> {\r\n      return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AlertComponent} from './components/alert/alert.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AlertService} from './services/alert.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    AlertComponent\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    AlertComponent\r\n  ],\r\n  providers:[AlertService]\r\n})\r\n\r\nexport class SharedModule {\r\n\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}