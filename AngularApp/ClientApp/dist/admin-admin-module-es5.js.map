{"version":3,"sources":["webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/create-page/create-page.component.ts","webpack:///src/app/admin/create-page/create-page.component.html","webpack:///src/app/admin/dashboard-page/dashboard-page.component.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.html","webpack:///src/app/admin/edit-page/edit-page.component.ts","webpack:///src/app/admin/edit-page/edit-page.component.html","webpack:///src/app/admin/login-page/login-page.component.ts","webpack:///src/app/admin/login-page/login-page.component.html","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.ts","webpack:///src/app/admin/shared/components/admin-layout/admin-layout.component.html","webpack:///src/app/admin/shared/components/alert/alert.component.ts","webpack:///src/app/admin/shared/components/alert/alert.component.html","webpack:///src/app/admin/shared/search.pipe.ts","webpack:///src/app/admin/shared/services/alert.service.ts","webpack:///src/app/admin/shared/services/auth.guard.ts","webpack:///src/app/admin/shared/services/auth.service.ts"],"names":["AdminModule","forChild","path","component","children","redirectTo","pathMatch","canActivate","declarations","imports","exports","providers","CreatePageComponent","alert","productsService","form","name","required","company","price","invalid","product","value","create","subscribe","reset","success","console","log","submit","selector","templateUrl","styleUrls","DashboardPageComponent","products","searchStr","pSub","getAll","unsubscribe","dSub","id","remove","filter","danger","EditPageComponent","route","submitted","params","pipe","getById","uSub","update","LoginPageComponent","auth","router","queryParams","message","email","password","minLength","user","login","navigate","AdminLayoutComponent","$event","event","preventDefault","logout","AlertComponent","alertService","delay","type","aSub","alert$","text","timeout","setTimeout","clearTimeout","SearchPipe","search","trim","toLowerCase","includes","AlertService","next","AuthGuard","state","isAuthenticated","loginAgain","AuthService","http","error$","returnSecureToken","setToken","token","error","response","expDate","Date","getTime","expiresIn","localStorage","setItem","idToken","toString","clear","providedIn"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { CreatePageComponent } from './create-page/create-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {AuthGuard} from \"./shared/services/auth.guard\";\r\nimport {SearchPipe} from './shared/search.pipe';\r\nimport { AlertComponent } from './shared/components/alert/alert.component';\r\nimport {AlertService} from \"./shared/services/alert.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLayoutComponent,\r\n    LoginPageComponent,\r\n    DashboardPageComponent,\r\n    CreatePageComponent,\r\n    EditPageComponent,\r\n    SearchPipe,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: AdminLayoutComponent, children: [\r\n          {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n          {path: 'login', component: LoginPageComponent},\r\n          {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n          {path: 'create', component: CreatePageComponent, canActivate: [AuthGuard]},\r\n          {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n        ]\r\n      }\r\n    ]),\r\n    FormsModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard, AlertService]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Product} from \"../../shared/interfaces\";\r\nimport {ProductsService} from \"../../shared/products.service\";\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      company: new FormControl(null, Validators.required),\r\n      price: new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const product: Product = {\r\n      name: this.form.value.name,\r\n      company: this.form.value.company,\r\n      price: this.form.value.price\r\n    }\r\n\r\n    this.productsService.create(product).subscribe(() => {\r\n      this.form.reset()\r\n      this.alert.success('Создан новый пост')\r\n    })\r\n\r\n    console.log('new product', product);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <h1>Создание нового продукта</h1>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"title\">Название продукта:</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    <div\r\n      *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('name').errors.required\"\r\n      >Введите название продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <!--<div class=\"form-control\">\r\n    <label>Контент поста:</label>\r\n    <quill-editor formControlName=\"text\"></quill-editor>\r\n  </div>-->\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('company').touched && form.get('company').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"company\">Автор поста:</label>\r\n    <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    <div\r\n      *ngIf=\"form.get('company').touched && form.get('company').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('company').errors.required\"\r\n      >Введите название компании</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-block btn-dark\"\r\n    [disabled]=\"form.invalid\"\r\n    >Создать пост</button>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ProductsService} from '../../shared/products.service';\r\nimport {Product} from '../../shared/interfaces';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.scss']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  products: Product[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  searchStr = '';\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.productsService.getAll().subscribe(products => {\r\n      this.products = products\r\n      // console.log('Products: ',this.products);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.productsService.remove(id).subscribe(() => {\r\n      this.products = this.products.filter(product => product.id !== id);\r\n      this.alert.danger('Продукт был удален');\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"products.length; else loading\">\r\n  <div class=\"form-control\">\r\n    <input type=\"text\" placeholder=\"Найти продукт...\" [(ngModel)]=\"searchStr\">\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Название</th>\r\n      <th>Компания</th>\r\n      <th>Цена</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let product of products | searchPosts:searchStr ; let idx = index\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ product.name }}</td>\r\n      <td>{{ product.company }}</td>\r\n      <td>{{ product.price | currency:'USD' }}</td>\r\n      <td>\r\n        <button\r\n          class=\"btn btn-link open\"\r\n          [routerLink]=\"['/admin','product', product.id, 'edit']\"\r\n        >Открыть</button>\r\n\r\n        <a (click)=\"remove(product.id)\">Удалить</a>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProductsService} from '../../shared/products.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Product} from '../../shared/interfaces';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-page',\r\n  templateUrl: './edit-page.component.html',\r\n  styleUrls: ['./edit-page.component.scss']\r\n})\r\nexport class EditPageComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  product: Product\r\n  submitted: boolean = false\r\n  uSub: Subscription\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(switchMap((params: Params) => {\r\n        return this.productsService.getById(params['id'])\r\n      }))\r\n      .subscribe((product: Product) => {\r\n        this.product = product\r\n        this.form = new FormGroup({\r\n          name: new FormControl(product.name, Validators.required),\r\n          company: new FormControl(product.company, Validators.required)\r\n        })\r\n      })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    this.uSub = this.productsService.update({\r\n      ...this.product,\r\n      name: this.form.value.name,\r\n      company: this.form.value.company\r\n    }).subscribe(() => {\r\n      this.submitted = false\r\n      this.alert.success('Продукт был обновлен')\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.uSub) {\r\n      this.uSub.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"form; else loading\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n      class=\"form-control\"\r\n    >\r\n      <label for=\"name\">Название продукта:</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n        class=\"validation\"\r\n      >\r\n        <small\r\n          *ngIf=\"form.get('name').errors.required\"\r\n        >Введите название поста</small>\r\n      </div>\r\n    </div>\r\n\r\n    <!--<div class=\"form-control\">\r\n      <quill-editor formControlName=\"text\"></quill-editor>\r\n    </div-->>\r\n\r\n    <button\r\n      [disabled]=\"form.invalid || submitted\"\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n    >Обновить</button>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../../shared/interfaces';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup\r\n  submitted: boolean =  false;\r\n  message: string\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['loginAgain']) {\r\n        this.message = 'Пожалуйста, введите данные.';\r\n      } else if (params['authFailed']) {\r\n        this.message = 'Сессия истекла. Введите данные заново.';\r\n      }\r\n    })\r\n\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    const user: User = {\r\n      email: this.form.value.email,\r\n      password: this.form.value.password\r\n    }\r\n\r\n    this.auth.login(user).subscribe(() => {\r\n      this.form.reset;\r\n      this.router.navigate(['/admin','dashboard'])\r\n      this.submitted = false;\r\n    }, () => {\r\n      this.submitted = false\r\n    });\r\n\r\n  }\r\n}\r\n","<form class=\"card\" [formGroup]=\"form\">\r\n  <h2>Войти в панель администратора</h2>\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div class=\"alert alert-info\" *ngIf=\"message\">\r\n    {{ message }}\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    <div\r\n      *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('email').errors.required\"\r\n      >Нужно ввести email</small>\r\n      <small\r\n        *ngIf=\"form.get('email').errors.email\"\r\n      >Email должен быть email</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"password\">Password:</label>\r\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    <div\r\n      *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n      class=\"validation\">\r\n      <small\r\n        *ngIf=\"form.get('password').errors.required\"\r\n      >Нужно ввести пароль</small>\r\n\r\n      <small\r\n        *ngIf=\"form.get('password').errors.minlength\"\r\n      >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\r\n        Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    [disabled]=\"form.invalid || submitted\"\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submit()\"\r\n  >Войти</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout($event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.auth.logout();\r\n    this.router.navigate(['/admin','login'])\r\n  }\r\n}\r\n","<app-alert></app-alert>\r\n\r\n<nav class=\"navbar bg-primary\">\r\n  <h1>\r\n    <a routerLink=\"/\">Angular Admin</a>\r\n  </h1>\r\n\r\n  <ul *ngIf=\"auth.isAuthenticated()\">\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','dashboard']\">Главная</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','create']\">Создать</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Alert, AlertService} from \"../../services/alert.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() delay = 5000\r\n  public text: string\r\n  public type = 'success'\r\n  aSub: Subscription\r\n\r\n  constructor(\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(){\r\n    this.aSub = this.alertService.alert$.subscribe((alert: Alert) => {\r\n      this.text = alert.text\r\n      this.type = alert.type\r\n\r\n      const timeout = setTimeout(() => {\r\n        clearTimeout(timeout)\r\n        this.text = ''\r\n      }, this.delay)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"alert-wrap\" *ngIf=\"text\">\r\n  <div\r\n    class=\"alert\"\r\n    [ngClass]=\" {\r\n     'alert-success': type === 'success',\r\n     'alert-warning': type === 'warning',\r\n     'alert-danger': type === 'danger'\r\n    }\"\r\n    >\r\n    <p>{{ text }}</p>\r\n  </div>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Product} from '../../shared/interfaces';\r\n\r\n@Pipe({\r\n  name: 'searchProducts'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform{\r\n  transform(products: Product[], search = ''): Product[] {\r\n    if (!search.trim()) {\r\n      return products\r\n    }\r\n\r\n    return products.filter(product => {\r\n      return product.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    this.alert$.next({type: 'success', text})\r\n\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated()) {\r\n      return true\r\n    } else {\r\n      this.auth.logout()\r\n      this.router.navigate(['/admin','login'], {\r\n        queryParams: {\r\n          loginAgain: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {FbAuthResponse, User} from '../../../shared/interfaces';\r\nimport {Observable, Subject, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  public error$: Subject<string> = new Subject<string>()\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get token(): string {\r\n    //const expDate = new Date(localStorage.getItem('fb-token-exp'));\r\n    //if (new Date > expDate) {\r\n    //  this.logout();\r\n    //  return null;\r\n    //}\r\n\r\n    //return localStorage.getItem('fb-token')\r\n\r\n      return 'test'\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    user.returnSecureToken = true;\r\n    //return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`, user)\r\n    //  .pipe(\r\n    //    tap(this.setToken),\r\n    //    catchError(this.handleError.bind(this))\r\n    //  )\r\n      return new Subject<true>();\r\n  }\r\n\r\n  logout() {\r\n    this.setToken(null)\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    const {message} = error.error.error\r\n\r\n    switch (message) {\r\n      case 'INVALID_EMAIL':\r\n        this.error$.next('Неверный email')\r\n        break\r\n      case 'INVALID_PASSWORD':\r\n        this.error$.next('Неверный пароль')\r\n        break\r\n      case 'EMAIL_NOT_FOUND':\r\n        this.error$.next('Такого email нет')\r\n        break\r\n    }\r\n\r\n    console.log(this.error$)\r\n\r\n    return throwError(error)\r\n  }\r\n\r\n  private setToken(response: FbAuthResponse | null) {\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + +response.expiresIn*1000);\r\n      localStorage.setItem('fb-token', response.idToken)\r\n      localStorage.setItem('fb-token-exp', expDate.toString())\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n\r\n  }\r\n}\r\n"]}