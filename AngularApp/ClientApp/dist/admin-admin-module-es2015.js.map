{"version":3,"sources":["./src/app/admin/admin.module.ts","./src/app/admin/create-page/create-page.component.ts","./src/app/admin/create-page/create-page.component.html","./src/app/admin/dashboard-page/dashboard-page.component.ts","./src/app/admin/dashboard-page/dashboard-page.component.html","./src/app/admin/edit-page/edit-page.component.ts","./src/app/admin/edit-page/edit-page.component.html","./src/app/admin/login-page/login-page.component.ts","./src/app/admin/login-page/login-page.component.html","./src/app/admin/shared/components/admin-layout/admin-layout.component.ts","./src/app/admin/shared/components/admin-layout/admin-layout.component.html","./src/app/admin/shared/components/alert/alert.component.ts","./src/app/admin/shared/components/alert/alert.component.html","./src/app/admin/shared/search.pipe.ts","./src/app/admin/shared/services/alert.service.ts","./src/app/admin/shared/services/auth.guard.ts","./src/app/admin/shared/services/auth.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { CreatePageComponent } from './create-page/create-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {AuthGuard} from \"./shared/services/auth.guard\";\r\nimport {SearchPipe} from './shared/search.pipe';\r\nimport { AlertComponent } from './shared/components/alert/alert.component';\r\nimport {AlertService} from \"./shared/services/alert.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLayoutComponent,\r\n    LoginPageComponent,\r\n    DashboardPageComponent,\r\n    CreatePageComponent,\r\n    EditPageComponent,\r\n    SearchPipe,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: AdminLayoutComponent, children: [\r\n          {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n          {path: 'login', component: LoginPageComponent},\r\n          {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n          {path: 'create', component: CreatePageComponent, canActivate: [AuthGuard]},\r\n          {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n        ]\r\n      }\r\n    ]),\r\n    FormsModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard, AlertService]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Product} from \"../../shared/interfaces\";\r\nimport {ProductsService} from \"../../shared/products.service\";\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      company: new FormControl(null, Validators.required),\r\n      price: new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const product: Product = {\r\n      name: this.form.value.name,\r\n      company: this.form.value.company,\r\n      price: this.form.value.price\r\n    }\r\n\r\n    this.productsService.create(product).subscribe(() => {\r\n      this.form.reset()\r\n      this.alert.success('Создан новый пост')\r\n    })\r\n\r\n    console.log('new product', product);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <h1>Создание нового продукта</h1>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"title\">Название продукта:</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    <div\r\n      *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('name').errors.required\"\r\n      >Введите название продукта</small>\r\n    </div>\r\n  </div>\r\n\r\n  <!--<div class=\"form-control\">\r\n    <label>Контент поста:</label>\r\n    <quill-editor formControlName=\"text\"></quill-editor>\r\n  </div>-->\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('company').touched && form.get('company').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"company\">Автор поста:</label>\r\n    <input id=\"company\" type=\"text\" formControlName=\"company\">\r\n    <div\r\n      *ngIf=\"form.get('company').touched && form.get('company').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('company').errors.required\"\r\n      >Введите название компании</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-block btn-dark\"\r\n    [disabled]=\"form.invalid\"\r\n    >Создать пост</button>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ProductsService} from '../../shared/products.service';\r\nimport {Product} from '../../shared/interfaces';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from '../shared/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.scss']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  products: Product[] = []\r\n  pSub: Subscription\r\n  dSub: Subscription\r\n  searchStr = '';\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pSub = this.productsService.getAll().subscribe(products => {\r\n      this.products = products\r\n      // console.log('Products: ',this.products);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pSub.unsubscribe();\r\n    if (this.dSub) {\r\n      this.dSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.dSub = this.productsService.remove(id).subscribe(() => {\r\n      this.products = this.products.filter(product => product.id !== id);\r\n      this.alert.danger('Продукт был удален');\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"products.length; else loading\">\r\n  <div class=\"form-control\">\r\n    <input type=\"text\" placeholder=\"Найти продукт...\" [(ngModel)]=\"searchStr\">\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Название</th>\r\n      <th>Компания</th>\r\n      <th>Цена</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let product of products | searchPosts:searchStr ; let idx = index\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ product.name }}</td>\r\n      <td>{{ product.company }}</td>\r\n      <td>{{ product.price | currency:'USD' }}</td>\r\n      <td>\r\n        <button\r\n          class=\"btn btn-link open\"\r\n          [routerLink]=\"['/admin','product', product.id, 'edit']\"\r\n        >Открыть</button>\r\n\r\n        <a (click)=\"remove(product.id)\">Удалить</a>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProductsService} from '../../shared/products.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Product} from '../../shared/interfaces';\r\nimport {Subscription} from 'rxjs';\r\nimport {AlertService} from \"../shared/services/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-page',\r\n  templateUrl: './edit-page.component.html',\r\n  styleUrls: ['./edit-page.component.scss']\r\n})\r\nexport class EditPageComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  product: Product\r\n  submitted: boolean = false\r\n  uSub: Subscription\r\n\r\n  constructor(\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(switchMap((params: Params) => {\r\n        return this.productsService.getById(params['id'])\r\n      }))\r\n      .subscribe((product: Product) => {\r\n        this.product = product\r\n        this.form = new FormGroup({\r\n          name: new FormControl(product.name, Validators.required),\r\n          company: new FormControl(product.company, Validators.required)\r\n        })\r\n      })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    this.uSub = this.productsService.update({\r\n      ...this.product,\r\n      name: this.form.value.name,\r\n      company: this.form.value.company\r\n    }).subscribe(() => {\r\n      this.submitted = false\r\n      this.alert.success('Продукт был обновлен')\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.uSub) {\r\n      this.uSub.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"form; else loading\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('name').touched && form.get('name').invalid}\"\r\n      class=\"form-control\"\r\n    >\r\n      <label for=\"name\">Название продукта:</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').touched && form.get('name').invalid\"\r\n        class=\"validation\"\r\n      >\r\n        <small\r\n          *ngIf=\"form.get('name').errors.required\"\r\n        >Введите название поста</small>\r\n      </div>\r\n    </div>\r\n\r\n    <!--<div class=\"form-control\">\r\n      <quill-editor formControlName=\"text\"></quill-editor>\r\n    </div-->>\r\n\r\n    <button\r\n      [disabled]=\"form.invalid || submitted\"\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n    >Обновить</button>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <p class=\"text-center\">Идет загрузка...</p>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../../shared/interfaces';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup\r\n  submitted: boolean =  false;\r\n  message: string\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['loginAgain']) {\r\n        this.message = 'Пожалуйста, введите данные.';\r\n      } else if (params['authFailed']) {\r\n        this.message = 'Сессия истекла. Введите данные заново.';\r\n      }\r\n    })\r\n\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    const user: User = {\r\n      email: this.form.value.email,\r\n      password: this.form.value.password\r\n    }\r\n\r\n    this.auth.login(user).subscribe(() => {\r\n      this.form.reset;\r\n      this.router.navigate(['/admin','dashboard'])\r\n      this.submitted = false;\r\n    }, () => {\r\n      this.submitted = false\r\n    });\r\n\r\n  }\r\n}\r\n","<form class=\"card\" [formGroup]=\"form\">\r\n  <h2>Войти в панель администратора</h2>\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"(auth.error$ | async) as error\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div class=\"alert alert-info\" *ngIf=\"message\">\r\n    {{ message }}\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    <div\r\n      *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n      class=\"validation\"\r\n    >\r\n      <small\r\n        *ngIf=\"form.get('email').errors.required\"\r\n      >Нужно ввести email</small>\r\n      <small\r\n        *ngIf=\"form.get('email').errors.email\"\r\n      >Email должен быть email</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n    class=\"form-control\"\r\n  >\r\n    <label for=\"password\">Password:</label>\r\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    <div\r\n      *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n      class=\"validation\">\r\n      <small\r\n        *ngIf=\"form.get('password').errors.required\"\r\n      >Нужно ввести пароль</small>\r\n\r\n      <small\r\n        *ngIf=\"form.get('password').errors.minlength\"\r\n      >Пароль должен быть не менее {{form.get('password').errors.minlength.requiredLength}}.\r\n        Сейчас введено {{form.get('password').errors.minlength.actualLength}} символов</small>\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    [disabled]=\"form.invalid || submitted\"\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submit()\"\r\n  >Войти</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout($event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.auth.logout();\r\n    this.router.navigate(['/admin','login'])\r\n  }\r\n}\r\n","<app-alert></app-alert>\r\n\r\n<nav class=\"navbar bg-primary\">\r\n  <h1>\r\n    <a routerLink=\"/\">Angular Admin</a>\r\n  </h1>\r\n\r\n  <ul *ngIf=\"auth.isAuthenticated()\">\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','dashboard']\">Главная</a>\r\n    </li>\r\n    <li routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/admin','create']\">Создать</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#\" (click)=\"logout($event)\">Выйти</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Alert, AlertService} from \"../../services/alert.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() delay = 5000\r\n  public text: string\r\n  public type = 'success'\r\n  aSub: Subscription\r\n\r\n  constructor(\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(){\r\n    this.aSub = this.alertService.alert$.subscribe((alert: Alert) => {\r\n      this.text = alert.text\r\n      this.type = alert.type\r\n\r\n      const timeout = setTimeout(() => {\r\n        clearTimeout(timeout)\r\n        this.text = ''\r\n      }, this.delay)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"alert-wrap\" *ngIf=\"text\">\r\n  <div\r\n    class=\"alert\"\r\n    [ngClass]=\" {\r\n     'alert-success': type === 'success',\r\n     'alert-warning': type === 'warning',\r\n     'alert-danger': type === 'danger'\r\n    }\"\r\n    >\r\n    <p>{{ text }}</p>\r\n  </div>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Product} from '../../shared/interfaces';\r\n\r\n@Pipe({\r\n  name: 'searchProducts'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform{\r\n  transform(products: Product[], search = ''): Product[] {\r\n    if (!search.trim()) {\r\n      return products\r\n    }\r\n\r\n    return products.filter(product => {\r\n      return product.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nexport type AlertType = 'success' | 'warning' | 'danger'\r\n\r\nexport interface Alert {\r\n  type: AlertType\r\n  text: string\r\n}\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n  public alert$ = new Subject<Alert>()\r\n\r\n  success(text: string) {\r\n    console.log(text);\r\n    this.alert$.next({type: 'success', text})\r\n\r\n  }\r\n\r\n  warning(text: string) {\r\n    this.alert$.next({type: 'warning', text})\r\n  }\r\n\r\n  danger(text: string) {\r\n    this.alert$.next({type: 'danger', text})\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n    ) {\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAuthenticated()) {\r\n      return true\r\n    } else {\r\n      this.auth.logout()\r\n      this.router.navigate(['/admin','login'], {\r\n        queryParams: {\r\n          loginAgain: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {FbAuthResponse, User} from '../../../shared/interfaces';\r\nimport {Observable, Subject, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  public error$: Subject<string> = new Subject<string>()\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get token(): string {\r\n    //const expDate = new Date(localStorage.getItem('fb-token-exp'));\r\n    //if (new Date > expDate) {\r\n    //  this.logout();\r\n    //  return null;\r\n    //}\r\n\r\n    //return localStorage.getItem('fb-token')\r\n\r\n      return 'test'\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    user.returnSecureToken = true;\r\n    //return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`, user)\r\n    //  .pipe(\r\n    //    tap(this.setToken),\r\n    //    catchError(this.handleError.bind(this))\r\n    //  )\r\n      return new Subject<true>();\r\n  }\r\n\r\n  logout() {\r\n    this.setToken(null)\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    const {message} = error.error.error\r\n\r\n    switch (message) {\r\n      case 'INVALID_EMAIL':\r\n        this.error$.next('Неверный email')\r\n        break\r\n      case 'INVALID_PASSWORD':\r\n        this.error$.next('Неверный пароль')\r\n        break\r\n      case 'EMAIL_NOT_FOUND':\r\n        this.error$.next('Такого email нет')\r\n        break\r\n    }\r\n\r\n    console.log(this.error$)\r\n\r\n    return throwError(error)\r\n  }\r\n\r\n  private setToken(response: FbAuthResponse | null) {\r\n    if (response) {\r\n      const expDate = new Date(new Date().getTime() + +response.expiresIn*1000);\r\n      localStorage.setItem('fb-token', response.idToken)\r\n      localStorage.setItem('fb-token-exp', expDate.toString())\r\n    } else {\r\n      localStorage.clear()\r\n    }\r\n\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}